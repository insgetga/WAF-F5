components:
  schemas:
    AcceptVpcPeeringConnectionRequest:
      properties:
        VpcPeeringConnectionId: {description: AcceptVpcPeeringConnectionRequest_VpcPeeringConnectionId,
          type: string}
      required: [VpcPeeringConnectionId]
      type: object
    AcceptVpcPeeringConnectionResponse:
      properties:
        requestId: {description: AcceptVpcPeeringConnectionResponse_requestId, type: string}
        vpcPeeringConnection: {$ref: '#/components/schemas/vpcPeeringConnection'}
      type: object
    Add:
      description: Add
      properties:
        Group: {description: Add_Group, type: string}
        UserId: {description: Add_UserId, type: string}
      type: object
    AllocateAddressRequest:
      properties:
        Domain: {description: AllocateAddressRequest_Domain, type: string}
      type: object
    AllocateAddressResponse:
      properties:
        allocationId: {description: AllocateAddressResponse_allocationId, type: string}
        domain: {description: AllocateAddressResponse_domain, type: string}
        publicIp: {description: AllocateAddressResponse_publicIp, type: string}
        requestId: {description: AllocateAddressResponse_requestId, type: string}
      type: object
    AssignPrivateIpAddressesRequest:
      properties:
        Allow-reassignment | No-allow-reassignment: {description: AssignPrivateIpAddressesRequest_Allow-reassignment
            | No-allow-reassignment, type: string}
        NetworkInterfaceId: {description: AssignPrivateIpAddressesRequest_NetworkInterfaceId,
          type: string}
        PrivateIpAddress:
          description: AssignPrivateIpAddressesRequest_PrivateIpAddress
          items: {description: AssignPrivateIpAddressesRequest_PrivateIpAddress, type: string}
          type: array
        SecondaryPrivateIpAddressCount: {description: AssignPrivateIpAddressesRequest_SecondaryPrivateIpAddressCount,
          type: integer}
      required: [NetworkInterfaceId]
      type: object
    AssignPrivateIpAddressesResponse:
      properties:
        requestId: {description: AssignPrivateIpAddressesResponse_requestId, type: string}
        return: {description: AssignPrivateIpAddressesResponse_return, type: boolean}
      type: object
    AssociateAddressRequest:
      properties:
        AllocationId: {description: AssociateAddressRequest_AllocationId, type: string}
        AllowReassociation: {description: AssociateAddressRequest_AllowReassociation,
          type: boolean}
        InstanceId: {description: AssociateAddressRequest_InstanceId, type: string}
        NetworkInterfaceId: {description: AssociateAddressRequest_NetworkInterfaceId,
          type: string}
        PrivateIpAddress: {description: AssociateAddressRequest_PrivateIpAddress,
          type: string}
        PublicIp: {description: AssociateAddressRequest_PublicIp, type: string}
      type: object
    AssociateAddressResponse:
      properties:
        associationId: {description: AssociateAddressResponse_associationId, type: string}
        requestId: {description: AssociateAddressResponse_requestId, type: string}
      type: object
    AssociateDhcpOptionsRequest:
      properties:
        DhcpOptionsId: {description: AssociateDhcpOptionsRequest_DhcpOptionsId, type: string}
        VpcId: {description: AssociateDhcpOptionsRequest_VpcId, type: string}
      required: [DhcpOptionsId, VpcId]
      type: object
    AssociateDhcpOptionsResponse:
      properties:
        requestId: {description: AssociateDhcpOptionsResponse_requestId, type: string}
        return: {description: AssociateDhcpOptionsResponse_return, type: boolean}
      type: object
    AssociateRouteTableRequest:
      properties:
        RouteTableId: {description: AssociateRouteTableRequest_RouteTableId, type: string}
        SubnetId: {description: AssociateRouteTableRequest_SubnetId, type: string}
      required: [SubnetId, RouteTableId]
      type: object
    AssociateRouteTableResponse:
      properties:
        associationId: {description: AssociateRouteTableResponse_associationId, type: string}
        requestId: {description: AssociateRouteTableResponse_requestId, type: string}
      type: object
    AttachInternetGatewayRequest:
      properties:
        InternetGatewayId: {description: AttachInternetGatewayRequest_InternetGatewayId,
          type: string}
        VpcId: {description: AttachInternetGatewayRequest_VpcId, type: string}
      type: object
    AttachInternetGatewayResponse:
      properties:
        requestId: {description: AttachInternetGatewayResponse_requestId, type: string}
        return: {description: AttachInternetGatewayResponse_return, type: boolean}
      type: object
    AttachNetworkInterfaceRequest:
      properties:
        DeviceIndex: {description: AttachNetworkInterfaceRequest_DeviceIndex, type: integer}
        DryRun: {description: AttachNetworkInterfaceRequest_DryRun, type: boolean}
        InstanceId: {description: AttachNetworkInterfaceRequest_InstanceId, type: string}
        NetworkInterfaceId: {description: AttachNetworkInterfaceRequest_NetworkInterfaceId,
          type: string}
      required: [NetworkInterfaceId, InstanceId, DeviceIndex]
      type: object
    AttachNetworkInterfaceResponse:
      properties:
        attachmentId: {description: AttachNetworkInterfaceResponse_attachmentId, type: string}
      type: object
    AttachVolumeRequest:
      properties:
        Device: {description: AttachVolumeRequest_Device, type: string}
        DryRun: {description: AttachVolumeRequest_DryRun, type: boolean}
        InstanceId: {description: AttachVolumeRequest_InstanceId, type: string}
        VolumeId: {description: AttachVolumeRequest_VolumeId, type: string}
      required: [VolumeId, InstanceId, Device]
      type: object
    AttachVolumeResponse:
      properties:
        attachTime: {description: AttachVolumeResponse_attachTime, type: string}
        deleteOnTermination: {description: AttachVolumeResponse_deleteOnTermination,
          type: boolean}
        device: {description: AttachVolumeResponse_device, type: string}
        instanceId: {description: AttachVolumeResponse_instanceId, type: string}
        requestId: {description: AttachVolumeResponse_requestId, type: string}
        status: {description: AttachVolumeResponse_status, type: string}
        volumeId: {description: AttachVolumeResponse_volumeId, type: string}
      type: object
    AttachVpnGatewayRequest:
      properties:
        DryRun: {description: AttachVpnGatewayRequest_DryRun, type: boolean}
        VpcId: {description: AttachVpnGatewayRequest_VpcId, type: string}
        VpnGatewayId: {description: AttachVpnGatewayRequest_VpnGatewayId, type: string}
      type: object
    AttachVpnGatewayResponse:
      properties:
        attachment: {$ref: '#/components/schemas/attachment_0'}
        requestId: {description: AttachVpnGatewayResponse_requestId, type: string}
      type: object
    Attachment:
      description: Attachment
      properties:
        AttachmentId: {description: Attachment_AttachmentId, type: string}
        DeleteOnTermination: {description: Attachment_DeleteOnTermination, type: boolean}
      type: object
    Attachments:
      description: Attachments
      properties:
        State: {description: Attachments_State, type: string}
        VpcId: {description: Attachments_VpcId, type: string}
      type: object
    AuthorizeSecurityGroupEgressRequest:
      properties:
        CidrIp: {description: AuthorizeSecurityGroupEgressRequest_CidrIp, type: string}
        FromPort: {description: AuthorizeSecurityGroupEgressRequest_FromPort, type: integer}
        GroupId: {description: AuthorizeSecurityGroupEgressRequest_GroupId, type: string}
        IpPermissions:
          description: AuthorizeSecurityGroupEgressRequest_IpPermissions
          items: {$ref: '#/components/schemas/IpPermissions'}
          type: array
        IpProtocol: {description: AuthorizeSecurityGroupEgressRequest_IpProtocol,
          type: string}
        SourceSecurityGroupName: {description: AuthorizeSecurityGroupEgressRequest_SourceSecurityGroupName,
          type: string}
        SourceSecurityGroupOwnerId: {description: AuthorizeSecurityGroupEgressRequest_SourceSecurityGroupOwnerId,
          type: string}
        ToPort: {description: AuthorizeSecurityGroupEgressRequest_ToPort, type: integer}
      required: [GroupId]
      type: object
    AuthorizeSecurityGroupEgressResponse:
      properties:
        requestId: {description: AuthorizeSecurityGroupEgressResponse_requestId, type: string}
        return: {description: AuthorizeSecurityGroupEgressResponse_return, type: boolean}
      type: object
    AuthorizeSecurityGroupIngressRequest:
      properties:
        CidrIp: {description: AuthorizeSecurityGroupIngressRequest_CidrIp, type: string}
        FromPort: {description: AuthorizeSecurityGroupIngressRequest_FromPort, type: integer}
        GroupId: {description: AuthorizeSecurityGroupIngressRequest_GroupId, type: string}
        GroupName: {description: AuthorizeSecurityGroupIngressRequest_GroupName, type: string}
        IpPermissions:
          description: AuthorizeSecurityGroupIngressRequest_IpPermissions
          items: {$ref: '#/components/schemas/IpPermissions'}
          type: array
        IpProtocol: {description: AuthorizeSecurityGroupIngressRequest_IpProtocol,
          type: string}
        SourceSecurityGroupName: {description: AuthorizeSecurityGroupIngressRequest_SourceSecurityGroupName,
          type: string}
        SourceSecurityGroupOwnerId: {description: AuthorizeSecurityGroupIngressRequest_SourceSecurityGroupOwnerId,
          type: string}
        ToPort: {description: AuthorizeSecurityGroupIngressRequest_ToPort, type: integer}
      type: object
    AuthorizeSecurityGroupIngressResponse:
      properties:
        requestId: {description: AuthorizeSecurityGroupIngressResponse_requestId,
          type: string}
        return: {description: AuthorizeSecurityGroupIngressResponse_return, type: boolean}
      type: object
    BlockDeviceMapping_0:
      description: BlockDeviceMapping_0
      properties:
        DeviceName: {description: BlockDeviceMapping_0_DeviceName, type: string}
        Ebs: {$ref: '#/components/schemas/Ebs_1'}
        NoDevice: {description: BlockDeviceMapping_0_NoDevice, type: string}
        VirtualName: {description: BlockDeviceMapping_0_VirtualName, type: string}
      type: object
    BlockDeviceMapping_1:
      description: BlockDeviceMapping_1
      properties:
        DeviceName: {description: BlockDeviceMapping_1_DeviceName, type: string}
        Ebs: {$ref: '#/components/schemas/Ebs_0'}
        NoDevice: {description: BlockDeviceMapping_1_NoDevice, type: string}
        VirtualName: {description: BlockDeviceMapping_1_VirtualName, type: string}
      type: object
    CancelExportTaskRequest:
      properties:
        ExportTaskId: {description: CancelExportTaskRequest_ExportTaskId, type: string}
      required: [ExportTaskId]
      type: object
    CancelExportTaskResponse:
      properties:
        requestId: {description: CancelExportTaskResponse_requestId, type: string}
        return: {description: CancelExportTaskResponse_return, type: boolean}
      type: object
    CopyImageRequest:
      properties:
        Description: {description: CopyImageRequest_Description, type: string}
        DryRun: {description: CopyImageRequest_DryRun, type: boolean}
        Name: {description: CopyImageRequest_Name, type: string}
        SourceImageId: {description: CopyImageRequest_SourceImageId, type: string}
        SourceRegion: {description: CopyImageRequest_SourceRegion, type: string}
      required: [SourceRegion, SourceImageId]
      type: object
    CopyImageResponse:
      properties:
        imageId: {description: CopyImageResponse_imageId, type: string}
        requestId: {description: CopyImageResponse_requestId, type: string}
      type: object
    CopySnapshotRequest:
      properties:
        Description: {description: CopySnapshotRequest_Description, type: string}
        DestinationRegion: {description: CopySnapshotRequest_DestinationRegion, type: string}
        DryRun: {description: CopySnapshotRequest_DryRun, type: boolean}
        SourceRegion: {description: CopySnapshotRequest_SourceRegion, type: string}
        SourceSnapshotId: {description: CopySnapshotRequest_SourceSnapshotId, type: string}
      required: [SourceRegion, SourceSnapshotId]
      type: object
    CopySnapshotResponse:
      properties:
        requestId: {description: CopySnapshotResponse_requestId, type: string}
        snapshotId: {description: CopySnapshotResponse_snapshotId, type: string}
      type: object
    CreateCustomerGatewayRequest:
      properties:
        BgpAsn: {description: CreateCustomerGatewayRequest_BgpAsn, type: integer}
        IpAddress: {description: CreateCustomerGatewayRequest_IpAddress, type: string}
        Type: {description: CreateCustomerGatewayRequest_Type, type: string}
      required: [Type, IpAddress]
      type: object
    CreateCustomerGatewayResponse:
      properties:
        customerGateway: {$ref: '#/components/schemas/customerGateway'}
        requestId: {description: CreateCustomerGatewayResponse_requestId, type: string}
      type: object
    CreateDhcpOptionsRequest:
      properties:
        DhcpConfiguration:
          description: CreateDhcpOptionsRequest_DhcpConfiguration
          items: {$ref: '#/components/schemas/DhcpConfiguration'}
          type: array
      required: [DhcpConfiguration]
      type: object
    CreateDhcpOptionsResponse:
      properties:
        dhcpOptions: {$ref: '#/components/schemas/dhcpOptions'}
        requestId: {description: CreateDhcpOptionsResponse_requestId, type: string}
      type: object
    CreateImageExportTaskRequest:
      properties:
        ExportToOsu: {$ref: '#/components/schemas/ExportToOsu_0'}
        ImageId: {description: CreateImageExportTaskRequest_ImageId, type: string}
      required: [ImageId, ExportToOsu]
      type: object
    CreateImageExportTaskResponse:
      properties:
        imageExportTask: {$ref: '#/components/schemas/imageExportTask'}
        requestId: {description: CreateImageExportTaskResponse_requestId, type: string}
      type: object
    CreateImageRequest:
      properties:
        Description: {description: CreateImageRequest_Description, type: string}
        DryRun: {description: CreateImageRequest_DryRun, type: boolean}
        InstanceId: {description: CreateImageRequest_InstanceId, type: string}
        Name: {description: CreateImageRequest_Name, type: string}
        NoReboot: {description: CreateImageRequest_NoReboot, type: boolean}
      required: [InstanceId, Name]
      type: object
    CreateImageResponse:
      properties:
        imageId: {description: CreateImageResponse_imageId, type: string}
        requestId: {description: CreateImageResponse_requestId, type: string}
      type: object
    CreateKeyPairRequest:
      properties:
        KeyName: {description: CreateKeyPairRequest_KeyName, type: string}
      required: [KeyName]
      type: object
    CreateKeyPairResponse:
      properties:
        keyFingerprint: {description: CreateKeyPairResponse_keyFingerprint, type: string}
        keyMaterial: {description: CreateKeyPairResponse_keyMaterial, type: string}
        keyName: {description: CreateKeyPairResponse_keyName, type: string}
        requestId: {description: CreateKeyPairResponse_requestId, type: string}
      type: object
    CreateNatGatewayRequest:
      properties:
        AllocationId: {description: CreateNatGatewayRequest_AllocationId, type: string}
        ClientToken: {description: CreateNatGatewayRequest_ClientToken, type: string}
        SubnetId: {description: CreateNatGatewayRequest_SubnetId, type: string}
      required: [AllocationId, SubnetId]
      type: object
    CreateNatGatewayResponse:
      properties:
        clientToken: {description: CreateNatGatewayResponse_clientToken, type: string}
        natGateway: {$ref: '#/components/schemas/natGateway'}
        requestId: {description: CreateNatGatewayResponse_requestId, type: string}
      type: object
    CreateNetworkInterfaceRequest:
      properties:
        Description: {description: CreateNetworkInterfaceRequest_Description, type: string}
        DryRun: {description: CreateNetworkInterfaceRequest_DryRun, type: boolean}
        Groups: {description: CreateNetworkInterfaceRequest_Groups, type: string}
        PrivateIpAddress: {description: CreateNetworkInterfaceRequest_PrivateIpAddress,
          type: string}
        SubnetId: {description: CreateNetworkInterfaceRequest_SubnetId, type: string}
      required: [SubnetId]
      type: object
    CreateNetworkInterfaceResponse:
      properties:
        networkInterface: {$ref: '#/components/schemas/networkInterface'}
      type: object
    CreateRouteRequest:
      properties:
        DestinationCidrBlock: {description: CreateRouteRequest_DestinationCidrBlock,
          type: string}
        GatewayId: {description: CreateRouteRequest_GatewayId, type: string}
        InstanceId: {description: CreateRouteRequest_InstanceId, type: string}
        NatGatewayId: {description: CreateRouteRequest_NatGatewayId, type: string}
        NetworkInterfaceId: {description: CreateRouteRequest_NetworkInterfaceId, type: string}
        RouteTableId: {description: CreateRouteRequest_RouteTableId, type: string}
        VpcPeeringConnectionId: {description: CreateRouteRequest_VpcPeeringConnectionId,
          type: string}
      required: [RouteTableId, DestinationCidrBlock]
      type: object
    CreateRouteResponse:
      properties:
        requestId: {description: CreateRouteResponse_requestId, type: string}
        return: {description: CreateRouteResponse_return, type: boolean}
      type: object
    CreateRouteTableRequest:
      properties:
        VpcId: {description: CreateRouteTableRequest_VpcId, type: string}
      required: [VpcId]
      type: object
    CreateRouteTableResponse:
      properties:
        requestId: {description: CreateRouteTableResponse_requestId, type: string}
        routeTable: {$ref: '#/components/schemas/routeTable'}
      type: object
    CreateSecurityGroupRequest:
      properties:
        DryRun: {description: CreateSecurityGroupRequest_DryRun, type: boolean}
        GroupDescription: {description: CreateSecurityGroupRequest_GroupDescription,
          type: string}
        GroupName: {description: CreateSecurityGroupRequest_GroupName, type: string}
        VpcId: {description: CreateSecurityGroupRequest_VpcId, type: string}
      required: [GroupName, GroupDescription]
      type: object
    CreateSecurityGroupResponse:
      properties:
        groupId: {description: CreateSecurityGroupResponse_groupId, type: string}
        requestId: {description: CreateSecurityGroupResponse_requestId, type: string}
      type: object
    CreateSnapshotExportTaskRequest:
      properties:
        ExportToOsu: {$ref: '#/components/schemas/ExportToOsu_1'}
        SnapshotId: {description: CreateSnapshotExportTaskRequest_SnapshotId, type: string}
      required: [SnapshotId, ExportToOsu]
      type: object
    CreateSnapshotExportTaskResponse:
      properties:
        requestId: {description: CreateSnapshotExportTaskResponse_requestId, type: string}
        snapshotExportTask: {$ref: '#/components/schemas/snapshotExportTask'}
      type: object
    CreateSnapshotRequest:
      properties:
        Description: {description: CreateSnapshotRequest_Description, type: string}
        DryRun: {description: CreateSnapshotRequest_DryRun, type: boolean}
        VolumeId: {description: CreateSnapshotRequest_VolumeId, type: string}
      required: [VolumeId]
      type: object
    CreateSnapshotResponse:
      properties:
        description: {description: CreateSnapshotResponse_description, type: string}
        ownerId: {description: CreateSnapshotResponse_ownerId, type: string}
        progress: {description: CreateSnapshotResponse_progress, type: string}
        requestId: {description: CreateSnapshotResponse_requestId, type: string}
        snapshotId: {description: CreateSnapshotResponse_snapshotId, type: string}
        startTime: {description: CreateSnapshotResponse_startTime, type: string}
        status: {description: CreateSnapshotResponse_status, type: string}
        tagSet:
          description: CreateSnapshotResponse_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        volumeId: {description: CreateSnapshotResponse_volumeId, type: string}
        volumeSize: {description: CreateSnapshotResponse_volumeSize, type: integer}
      type: object
    CreateSubnetRequest:
      properties:
        AvailabilityZone: {description: CreateSubnetRequest_AvailabilityZone, type: string}
        CidrBlock: {description: CreateSubnetRequest_CidrBlock, type: string}
        VpcId: {description: CreateSubnetRequest_VpcId, type: string}
      required: [VpcId, CidrBlock]
      type: object
    CreateSubnetResponse:
      properties:
        requestId: {description: CreateSubnetResponse_requestId, type: string}
        subnet: {$ref: '#/components/schemas/subnet'}
      type: object
    CreateTagsRequest:
      properties:
        ResourceId:
          description: CreateTagsRequest_ResourceId
          items: {description: CreateTagsRequest_ResourceId, type: string}
          type: array
        Tag:
          description: CreateTagsRequest_Tag
          items: {$ref: '#/components/schemas/Tag'}
          type: array
      required: [ResourceId, Tag]
      type: object
    CreateTagsResponse:
      properties:
        requestId: {description: CreateTagsResponse_requestId, type: string}
        return: {description: CreateTagsResponse_return, type: boolean}
      type: object
    CreateVolumePermission:
      description: CreateVolumePermission
      properties:
        Add:
          description: CreateVolumePermission_Add
          items: {$ref: '#/components/schemas/Add'}
          type: array
        Remove:
          description: CreateVolumePermission_Remove
          items: {$ref: '#/components/schemas/Remove'}
          type: array
      type: object
    CreateVolumeRequest:
      properties:
        AvailabilityZone: {description: CreateVolumeRequest_AvailabilityZone, type: string}
        DryRun: {description: CreateVolumeRequest_DryRun, type: boolean}
        Iops: {description: CreateVolumeRequest_Iops, type: integer}
        Size: {description: CreateVolumeRequest_Size, type: integer}
        SnapshotId: {description: CreateVolumeRequest_SnapshotId, type: string}
        VolumeType: {description: CreateVolumeRequest_VolumeType, type: string}
      required: [AvailabilityZone, Size]
      type: object
    CreateVolumeResponse:
      properties:
        attachmentSet:
          description: CreateVolumeResponse_attachmentSet
          items: {$ref: '#/components/schemas/attachmentSet_0'}
          type: array
        availabilityZone: {description: CreateVolumeResponse_availabilityZone, type: string}
        createTime: {description: CreateVolumeResponse_createTime, type: string}
        iops: {description: CreateVolumeResponse_iops, type: integer}
        requestId: {description: CreateVolumeResponse_requestId, type: string}
        size: {description: CreateVolumeResponse_size, type: integer}
        snapshotId: {description: CreateVolumeResponse_snapshotId, type: string}
        status: {description: CreateVolumeResponse_status, type: string}
        tagSet:
          description: CreateVolumeResponse_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        volumeId: {description: CreateVolumeResponse_volumeId, type: string}
        volumeType: {description: CreateVolumeResponse_volumeType, type: string}
      type: object
    CreateVpcEndpointRequest:
      properties:
        RouteTableId:
          description: CreateVpcEndpointRequest_RouteTableId
          items: {description: CreateVpcEndpointRequest_RouteTableId, type: string}
          type: array
        ServiceName: {description: CreateVpcEndpointRequest_ServiceName, type: string}
        VpcId: {description: CreateVpcEndpointRequest_VpcId, type: string}
      required: [VpcId, ServiceName]
      type: object
    CreateVpcEndpointResponse:
      properties:
        requestId: {description: CreateVpcEndpointResponse_requestId, type: string}
        vpcEndpoint: {$ref: '#/components/schemas/vpcEndpoint'}
      type: object
    CreateVpcPeeringConnectionRequest:
      properties:
        PeerOwnerId: {description: CreateVpcPeeringConnectionRequest_PeerOwnerId,
          type: string}
        PeerVpcId: {description: CreateVpcPeeringConnectionRequest_PeerVpcId, type: string}
        VpcId: {description: CreateVpcPeeringConnectionRequest_VpcId, type: string}
      required: [PeerVpcId, VpcId]
      type: object
    CreateVpcPeeringConnectionResponse:
      properties:
        requestId: {description: CreateVpcPeeringConnectionResponse_requestId, type: string}
        vpcPeeringConnection: {$ref: '#/components/schemas/vpcPeeringConnection'}
      type: object
    CreateVpcRequest:
      properties:
        CidrBlock: {description: CreateVpcRequest_CidrBlock, type: string}
        InstanceTenancy: {description: CreateVpcRequest_InstanceTenancy, type: string}
      required: [CidrBlock]
      type: object
    CreateVpcResponse:
      properties:
        requestId: {description: CreateVpcResponse_requestId, type: string}
        vpc: {$ref: '#/components/schemas/vpc'}
      type: object
    CreateVpnConnectionRequest:
      properties:
        CustomerGatewayId: {description: CreateVpnConnectionRequest_CustomerGatewayId,
          type: string}
        DryRun: {description: CreateVpnConnectionRequest_DryRun, type: boolean}
        Options: {$ref: '#/components/schemas/Options'}
        Type: {description: CreateVpnConnectionRequest_Type, type: string}
        VpnGatewayId: {description: CreateVpnConnectionRequest_VpnGatewayId, type: string}
      required: [Type, CustomerGatewayId, VpnGatewayId]
      type: object
    CreateVpnConnectionResponse:
      properties:
        requestId: {description: CreateVpnConnectionResponse_requestId, type: string}
        vpnConnection: {$ref: '#/components/schemas/vpnConnection'}
      type: object
    CreateVpnConnectionRouteRequest:
      properties:
        DestinationCidrBlock: {description: CreateVpnConnectionRouteRequest_DestinationCidrBlock,
          type: string}
        DryRun: {description: CreateVpnConnectionRouteRequest_DryRun, type: boolean}
        VpnConnectionId: {description: CreateVpnConnectionRouteRequest_VpnConnectionId,
          type: string}
      required: [VpnConnectionId, DestinationCidrBlock]
      type: object
    CreateVpnConnectionRouteResponse:
      properties:
        requestId: {description: CreateVpnConnectionRouteResponse_requestId, type: string}
        return: {description: CreateVpnConnectionRouteResponse_return, type: boolean}
      type: object
    CreateVpnGatewayRequest:
      properties:
        DryRun: {description: CreateVpnGatewayRequest_DryRun, type: boolean}
        Type: {description: CreateVpnGatewayRequest_Type, type: string}
      required: [Type]
      type: object
    CreateVpnGatewayResponse:
      properties:
        requestId: {description: CreateVpnGatewayResponse_requestId, type: string}
        vpnGateway: {$ref: '#/components/schemas/vpnGateway'}
      type: object
    DeleteCustomerGatewayRequest:
      properties:
        CustomerGatewayId: {description: DeleteCustomerGatewayRequest_CustomerGatewayId,
          type: string}
      required: [CustomerGatewayId]
      type: object
    DeleteCustomerGatewayResponse:
      properties:
        requestId: {description: DeleteCustomerGatewayResponse_requestId, type: string}
        return: {description: DeleteCustomerGatewayResponse_return, type: boolean}
      type: object
    DeleteDhcpOptionsRequest:
      properties:
        DhcpOptionsId: {description: DeleteDhcpOptionsRequest_DhcpOptionsId, type: string}
      required: [DhcpOptionsId]
      type: object
    DeleteDhcpOptionsResponse:
      properties:
        requestId: {description: DeleteDhcpOptionsResponse_requestId, type: string}
        return: {description: DeleteDhcpOptionsResponse_return, type: boolean}
      type: object
    DeleteInternetGatewayRequest:
      properties:
        InternetGatewayId: {description: DeleteInternetGatewayRequest_InternetGatewayId,
          type: string}
      required: [InternetGatewayId]
      type: object
    DeleteInternetGatewayResponse:
      properties:
        requestId: {description: DeleteInternetGatewayResponse_requestId, type: string}
        return: {description: DeleteInternetGatewayResponse_return, type: boolean}
      type: object
    DeleteKeyPairRequest:
      properties:
        KeyName: {description: DeleteKeyPairRequest_KeyName, type: string}
      required: [KeyName]
      type: object
    DeleteKeyPairResponse:
      properties:
        requestId: {description: DeleteKeyPairResponse_requestId, type: string}
        return: {description: DeleteKeyPairResponse_return, type: boolean}
      type: object
    DeleteNatGatewayRequest:
      properties:
        NatGatewayId: {description: DeleteNatGatewayRequest_NatGatewayId, type: string}
      required: [NatGatewayId]
      type: object
    DeleteNatGatewayResponse:
      properties:
        natGatewayId: {description: DeleteNatGatewayResponse_natGatewayId, type: string}
        requestId: {description: DeleteNatGatewayResponse_requestId, type: string}
      type: object
    DeleteNetworkInterfaceRequest:
      properties:
        DryRun: {description: DeleteNetworkInterfaceRequest_DryRun, type: boolean}
        NetworkInterfaceId: {description: DeleteNetworkInterfaceRequest_NetworkInterfaceId,
          type: string}
      required: [NetworkInterfaceId]
      type: object
    DeleteNetworkInterfaceResponse:
      properties:
        requestId: {description: DeleteNetworkInterfaceResponse_requestId, type: string}
        return: {description: DeleteNetworkInterfaceResponse_return, type: boolean}
      type: object
    DeleteRouteRequest:
      properties:
        DestinationCidrBlock: {description: DeleteRouteRequest_DestinationCidrBlock,
          type: string}
        RouteTableId: {description: DeleteRouteRequest_RouteTableId, type: string}
      required: [RouteTableId, DestinationCidrBlock]
      type: object
    DeleteRouteResponse:
      properties:
        requestId: {description: DeleteRouteResponse_requestId, type: string}
        return: {description: DeleteRouteResponse_return, type: boolean}
      type: object
    DeleteRouteTableRequest:
      properties:
        RouteTableId: {description: DeleteRouteTableRequest_RouteTableId, type: string}
      required: [RouteTableId]
      type: object
    DeleteRouteTableResponse:
      properties:
        requestId: {description: DeleteRouteTableResponse_requestId, type: string}
        return: {description: DeleteRouteTableResponse_return, type: boolean}
      type: object
    DeleteSecurityGroupRequest:
      properties:
        GroupId: {description: DeleteSecurityGroupRequest_GroupId, type: string}
        GroupName: {description: DeleteSecurityGroupRequest_GroupName, type: string}
      type: object
    DeleteSecurityGroupResponse:
      properties:
        requestId: {description: DeleteSecurityGroupResponse_requestId, type: string}
        return: {description: DeleteSecurityGroupResponse_return, type: boolean}
      type: object
    DeleteSnapshotRequest:
      properties:
        SnapshotId: {description: DeleteSnapshotRequest_SnapshotId, type: string}
      required: [SnapshotId]
      type: object
    DeleteSnapshotResponse:
      properties:
        requestId: {description: DeleteSnapshotResponse_requestId, type: string}
        return: {description: DeleteSnapshotResponse_return, type: boolean}
      type: object
    DeleteSubnetRequest:
      properties:
        SubnetId: {description: DeleteSubnetRequest_SubnetId, type: string}
      required: [SubnetId]
      type: object
    DeleteSubnetResponse:
      properties:
        requestId: {description: DeleteSubnetResponse_requestId, type: string}
        return: {description: DeleteSubnetResponse_return, type: boolean}
      type: object
    DeleteTagsRequest:
      properties:
        ResourceId:
          description: DeleteTagsRequest_ResourceId
          items: {description: DeleteTagsRequest_ResourceId, type: string}
          type: array
        Tag:
          description: DeleteTagsRequest_Tag
          items: {$ref: '#/components/schemas/Tag'}
          type: array
      required: [ResourceId]
      type: object
    DeleteTagsResponse:
      properties:
        requestId: {description: DeleteTagsResponse_requestId, type: string}
        return: {description: DeleteTagsResponse_return, type: boolean}
      type: object
    DeleteVolumeRequest:
      properties:
        DryRun: {description: DeleteVolumeRequest_DryRun, type: boolean}
        VolumeId: {description: DeleteVolumeRequest_VolumeId, type: string}
      required: [VolumeId]
      type: object
    DeleteVolumeResponse:
      properties:
        requestId: {description: DeleteVolumeResponse_requestId, type: string}
        return: {description: DeleteVolumeResponse_return, type: boolean}
      type: object
    DeleteVpcEndpointsRequest:
      properties:
        VpcEndpointId:
          description: DeleteVpcEndpointsRequest_VpcEndpointId
          items: {description: DeleteVpcEndpointsRequest_VpcEndpointId, type: string}
          type: array
      required: [VpcEndpointId]
      type: object
    DeleteVpcEndpointsResponse:
      properties:
        requestId: {description: DeleteVpcEndpointsResponse_requestId, type: string}
        unsuccessful:
          description: DeleteVpcEndpointsResponse_unsuccessful
          items: {$ref: '#/components/schemas/unsuccessful'}
          type: array
      type: object
    DeleteVpcPeeringConnectionRequest:
      properties:
        VpcPeeringConnectionId: {description: DeleteVpcPeeringConnectionRequest_VpcPeeringConnectionId,
          type: string}
      required: [VpcPeeringConnectionId]
      type: object
    DeleteVpcPeeringConnectionResponse:
      properties:
        requestId: {description: DeleteVpcPeeringConnectionResponse_requestId, type: string}
        return: {description: DeleteVpcPeeringConnectionResponse_return, type: boolean}
      type: object
    DeleteVpcRequest:
      properties:
        VpcId: {description: DeleteVpcRequest_VpcId, type: string}
      required: [VpcId]
      type: object
    DeleteVpcResponse:
      properties:
        requestId: {description: DeleteVpcResponse_requestId, type: string}
        return: {description: DeleteVpcResponse_return, type: boolean}
      type: object
    DeleteVpnConnectionRequest:
      properties:
        DryRun: {description: DeleteVpnConnectionRequest_DryRun, type: boolean}
        VpnConnectionId: {description: DeleteVpnConnectionRequest_VpnConnectionId,
          type: string}
      required: [VpnConnectionId]
      type: object
    DeleteVpnConnectionResponse:
      properties:
        requestId: {description: DeleteVpnConnectionResponse_requestId, type: string}
        return: {description: DeleteVpnConnectionResponse_return, type: boolean}
      type: object
    DeleteVpnConnectionRouteRequest:
      properties:
        DestinationCidrBlock: {description: DeleteVpnConnectionRouteRequest_DestinationCidrBlock,
          type: string}
        DryRun: {description: DeleteVpnConnectionRouteRequest_DryRun, type: boolean}
        VpnConnectionId: {description: DeleteVpnConnectionRouteRequest_VpnConnectionId,
          type: string}
      required: [VpnConnectionId, DestinationCidrBlock]
      type: object
    DeleteVpnConnectionRouteResponse:
      properties:
        requestId: {description: DeleteVpnConnectionRouteResponse_requestId, type: string}
        return: {description: DeleteVpnConnectionRouteResponse_return, type: boolean}
      type: object
    DeleteVpnGatewayRequest:
      properties:
        DryRun: {description: DeleteVpnGatewayRequest_DryRun, type: boolean}
        VpnGatewayId: {description: DeleteVpnGatewayRequest_VpnGatewayId, type: string}
      required: [VpnGatewayId]
      type: object
    DeleteVpnGatewayResponse:
      properties:
        requestId: {description: DeleteVpnGatewayResponse_requestId, type: string}
        return: {description: DeleteVpnGatewayResponse_return, type: boolean}
      type: object
    DeregisterImageRequest:
      properties:
        ImageId: {description: DeregisterImageRequest_ImageId, type: string}
      required: [ImageId]
      type: object
    DeregisterImageResponse:
      properties:
        requestId: {description: DeregisterImageResponse_requestId, type: string}
        return: {description: DeregisterImageResponse_return, type: boolean}
      type: object
    DescribeAddressesRequest:
      properties:
        AllocationId:
          description: DescribeAddressesRequest_AllocationId
          items: {description: DescribeAddressesRequest_AllocationId, type: string}
          type: array
        Filter:
          description: DescribeAddressesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        PublicIp:
          description: DescribeAddressesRequest_PublicIp
          items: {description: DescribeAddressesRequest_PublicIp, type: string}
          type: array
      type: object
    DescribeAddressesResponse:
      properties:
        addressesSet:
          description: DescribeAddressesResponse_addressesSet
          items: {$ref: '#/components/schemas/addressesSet'}
          type: array
        requestId: {description: DescribeAddressesResponse_requestId, type: string}
      type: object
    DescribeAvailabilityZonesRequest:
      properties:
        Filter:
          description: DescribeAvailabilityZonesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        ZoneName:
          description: DescribeAvailabilityZonesRequest_ZoneName
          items: {description: DescribeAvailabilityZonesRequest_ZoneName, type: string}
          type: array
      type: object
    DescribeAvailabilityZonesResponse:
      properties:
        availabilityZoneInfo:
          description: DescribeAvailabilityZonesResponse_availabilityZoneInfo
          items: {$ref: '#/components/schemas/availabilityZoneInfo'}
          type: array
        requestId: {description: DescribeAvailabilityZonesResponse_requestId, type: string}
      type: object
    DescribeCustomerGatewaysRequest:
      properties:
        CustomerGatewayId:
          description: DescribeCustomerGatewaysRequest_CustomerGatewayId
          items: {description: DescribeCustomerGatewaysRequest_CustomerGatewayId,
            type: string}
          type: array
        Filter:
          description: DescribeCustomerGatewaysRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
      type: object
    DescribeCustomerGatewaysResponse:
      properties:
        customerGatewaySet:
          description: DescribeCustomerGatewaysResponse_customerGatewaySet
          items: {$ref: '#/components/schemas/customerGatewaySet'}
          type: array
        requestId: {description: DescribeCustomerGatewaysResponse_requestId, type: string}
      type: object
    DescribeDhcpOptionsRequest:
      properties:
        DhcpOptionsId:
          description: DescribeDhcpOptionsRequest_DhcpOptionsId
          items: {description: DescribeDhcpOptionsRequest_DhcpOptionsId, type: string}
          type: array
        Filter:
          description: DescribeDhcpOptionsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
      type: object
    DescribeDhcpOptionsResponse:
      properties:
        dhcpOptionsSet:
          description: DescribeDhcpOptionsResponse_dhcpOptionsSet
          items: {$ref: '#/components/schemas/dhcpOptionsSet'}
          type: array
        requestId: {description: DescribeDhcpOptionsResponse_requestId, type: string}
      type: object
    DescribeImageAttributeRequest:
      properties:
        Attribute: {description: DescribeImageAttributeRequest_Attribute, type: string}
        ImageId: {description: DescribeImageAttributeRequest_ImageId, type: string}
      required: [ImageId, Attribute]
      type: object
    DescribeImageAttributeResponse:
      properties:
        description: {$ref: '#/components/schemas/description'}
        imageId: {description: DescribeImageAttributeResponse_imageId, type: string}
        launchPermission:
          description: DescribeImageAttributeResponse_launchPermission
          items: {$ref: '#/components/schemas/launchPermission'}
          type: array
        requestId: {description: DescribeImageAttributeResponse_requestId, type: string}
      type: object
    DescribeImageExportTasksRequest:
      properties:
        imageExportTaskId:
          description: DescribeImageExportTasksRequest_imageExportTaskId
          items: {description: DescribeImageExportTasksRequest_imageExportTaskId,
            type: string}
          type: array
      type: object
    DescribeImageExportTasksResponse:
      properties:
        imageExportTask:
          description: DescribeImageExportTasksResponse_imageExportTask
          items: {$ref: '#/components/schemas/imageExportTask'}
          type: array
        requestId: {description: DescribeImageExportTasksResponse_requestId, type: string}
      type: object
    DescribeImagesRequest:
      properties:
        ExecutableBy:
          description: DescribeImagesRequest_ExecutableBy
          items: {description: DescribeImagesRequest_ExecutableBy, type: string}
          type: array
        Filter:
          description: DescribeImagesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        ImageId:
          description: DescribeImagesRequest_ImageId
          items: {description: DescribeImagesRequest_ImageId, type: string}
          type: array
        Owner:
          description: DescribeImagesRequest_Owner
          items: {description: DescribeImagesRequest_Owner, type: string}
          type: array
      type: object
    DescribeImagesResponse:
      properties:
        imagesSet:
          description: DescribeImagesResponse_imagesSet
          items: {$ref: '#/components/schemas/imagesSet'}
          type: array
        requestId: {description: DescribeImagesResponse_requestId, type: string}
      type: object
    DescribeInstanceAttributeRequest:
      properties:
        Attribute: {description: DescribeInstanceAttributeRequest_Attribute, type: string}
        InstanceId: {description: DescribeInstanceAttributeRequest_InstanceId, type: string}
      required: [InstanceId, Attribute]
      type: object
    DescribeInstanceAttributeResponse:
      properties:
        blockDeviceMapping:
          description: DescribeInstanceAttributeResponse_blockDeviceMapping
          items: {$ref: '#/components/schemas/blockDeviceMapping_1'}
          type: array
        disableApiTermination: {$ref: '#/components/schemas/disableApiTermination'}
        ebsOptimized: {$ref: '#/components/schemas/ebsOptimized'}
        groupSet:
          description: DescribeInstanceAttributeResponse_groupSet
          items: {$ref: '#/components/schemas/groupSet'}
          type: array
        instanceId: {description: DescribeInstanceAttributeResponse_instanceId, type: string}
        instanceInitiatedShutdownBehavior: {$ref: '#/components/schemas/instanceInitiatedShutdownBehavior'}
        instanceType: {$ref: '#/components/schemas/instanceType'}
        ramdisk: {$ref: '#/components/schemas/ramdisk'}
        requestId: {description: DescribeInstanceAttributeResponse_requestId, type: string}
        rootDeviceName: {$ref: '#/components/schemas/rootDeviceName'}
        sourceDestCheck: {$ref: '#/components/schemas/sourceDestCheck'}
        userData: {$ref: '#/components/schemas/userData'}
      type: object
    DescribeInstanceStatusRequest:
      properties:
        Filter:
          description: DescribeInstanceStatusRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        IncludeAllInstances: {description: DescribeInstanceStatusRequest_IncludeAllInstances,
          type: boolean}
        InstanceId:
          description: DescribeInstanceStatusRequest_InstanceId
          items: {description: DescribeInstanceStatusRequest_InstanceId, type: string}
          type: array
        MaxResults: {description: DescribeInstanceStatusRequest_MaxResults, type: integer}
        NextToken: {description: DescribeInstanceStatusRequest_NextToken, type: integer}
      type: object
    DescribeInstanceStatusResponse:
      properties:
        instanceStatusSet:
          description: DescribeInstanceStatusResponse_instanceStatusSet
          items: {$ref: '#/components/schemas/instanceStatusSet'}
          type: array
        nextToken: {description: DescribeInstanceStatusResponse_nextToken, type: string}
        requestId: {description: DescribeInstanceStatusResponse_requestId, type: string}
      type: object
    DescribeInstanceTypesRequest:
      properties:
        Filter:
          description: DescribeInstanceTypesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
      type: object
    DescribeInstanceTypesResponse:
      properties:
        instanceTypeSet:
          description: DescribeInstanceTypesResponse_instanceTypeSet
          items: {$ref: '#/components/schemas/instanceTypeSet'}
          type: array
        requestId: {description: DescribeInstanceTypesResponse_requestId, type: string}
      type: object
    DescribeInstancesRequest:
      properties:
        Filter:
          description: DescribeInstancesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        InstanceId:
          description: DescribeInstancesRequest_InstanceId
          items: {description: DescribeInstancesRequest_InstanceId, type: string}
          type: array
        MaxResults: {description: DescribeInstancesRequest_MaxResults, type: integer}
        NextToken: {description: DescribeInstancesRequest_NextToken, type: string}
      type: object
    DescribeInstancesResponse:
      properties:
        nextToken: {description: DescribeInstancesResponse_nextToken, type: string}
        requestId: {description: DescribeInstancesResponse_requestId, type: string}
        reservationSet:
          description: DescribeInstancesResponse_reservationSet
          items: {$ref: '#/components/schemas/reservationSet'}
          type: array
      type: object
    DescribeInternetGatewaysRequest:
      properties:
        Filter:
          description: DescribeInternetGatewaysRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        InternetGatewayId:
          description: DescribeInternetGatewaysRequest_InternetGatewayId
          items: {description: DescribeInternetGatewaysRequest_InternetGatewayId,
            type: string}
          type: array
      type: object
    DescribeInternetGatewaysResponse:
      properties:
        internetGatewaySet:
          description: DescribeInternetGatewaysResponse_internetGatewaySet
          items: {$ref: '#/components/schemas/internetGatewaySet'}
          type: array
        requestId: {description: DescribeInternetGatewaysResponse_requestId, type: string}
      type: object
    DescribeKeyPairsRequest:
      properties:
        Filter:
          description: DescribeKeyPairsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        KeyName:
          description: DescribeKeyPairsRequest_KeyName
          items: {description: DescribeKeyPairsRequest_KeyName, type: string}
          type: array
      type: object
    DescribeKeyPairsResponse:
      properties:
        keySet:
          description: DescribeKeyPairsResponse_keySet
          items: {$ref: '#/components/schemas/keySet'}
          type: array
        requestId: {description: DescribeKeyPairsResponse_requestId, type: string}
      type: object
    DescribeNatGatewaysRequest:
      properties:
        Filter:
          description: DescribeNatGatewaysRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        MaxResults: {description: DescribeNatGatewaysRequest_MaxResults, type: integer}
        NatGatewayId:
          description: DescribeNatGatewaysRequest_NatGatewayId
          items: {description: DescribeNatGatewaysRequest_NatGatewayId, type: string}
          type: array
        NextToken: {description: DescribeNatGatewaysRequest_NextToken, type: string}
      type: object
    DescribeNatGatewaysResponse:
      properties:
        natGatewaySet:
          description: DescribeNatGatewaysResponse_natGatewaySet
          items: {$ref: '#/components/schemas/natGatewaySet'}
          type: array
        nextToken: {description: DescribeNatGatewaysResponse_nextToken, type: string}
        requestId: {description: DescribeNatGatewaysResponse_requestId, type: string}
      type: object
    DescribeNetworkInterfacesRequest:
      properties:
        Filter:
          description: DescribeNetworkInterfacesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        NetworkInterfaceId:
          description: DescribeNetworkInterfacesRequest_NetworkInterfaceId
          items: {description: DescribeNetworkInterfacesRequest_NetworkInterfaceId,
            type: string}
          type: array
      type: object
    DescribeNetworkInterfacesResponse:
      properties:
        networkInterfaceSet:
          description: DescribeNetworkInterfacesResponse_networkInterfaceSet
          items: {$ref: '#/components/schemas/networkInterfaceSet_1'}
          type: array
        requestId: {description: DescribeNetworkInterfacesResponse_requestId, type: string}
      type: object
    DescribePrefixListsRequest:
      properties:
        DryRun: {description: DescribePrefixListsRequest_DryRun, type: boolean}
        Filter:
          description: DescribePrefixListsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        MaxResults: {description: DescribePrefixListsRequest_MaxResults, type: integer}
        NextToken: {description: DescribePrefixListsRequest_NextToken, type: string}
        PrefixListId:
          description: DescribePrefixListsRequest_PrefixListId
          items: {description: DescribePrefixListsRequest_PrefixListId, type: string}
          type: array
      type: object
    DescribePrefixListsResponse:
      properties:
        nextToken: {description: DescribePrefixListsResponse_nextToken, type: string}
        prefixListSet:
          description: DescribePrefixListsResponse_prefixListSet
          items: {$ref: '#/components/schemas/prefixListSet'}
          type: array
        requestId: {description: DescribePrefixListsResponse_requestId, type: string}
      type: object
    DescribeProductTypesRequest:
      properties:
        Filter:
          description: DescribeProductTypesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
      type: object
    DescribeProductTypesResponse:
      properties:
        productTypeSet:
          description: DescribeProductTypesResponse_productTypeSet
          items: {$ref: '#/components/schemas/productTypeSet'}
          type: array
        requestId: {description: DescribeProductTypesResponse_requestId, type: string}
      type: object
    DescribeQuotasRequest:
      properties:
        Filter:
          description: DescribeQuotasRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        MaxResults: {description: DescribeQuotasRequest_MaxResults, type: integer}
        NextToken: {description: DescribeQuotasRequest_NextToken, type: string}
        QuotaName:
          description: DescribeQuotasRequest_QuotaName
          items: {description: DescribeQuotasRequest_QuotaName, type: string}
          type: array
      type: object
    DescribeQuotasResponse:
      properties:
        nextToken: {description: DescribeQuotasResponse_nextToken, type: string}
        referenceQuotaSet:
          description: DescribeQuotasResponse_referenceQuotaSet
          items: {$ref: '#/components/schemas/referenceQuotaSet'}
          type: array
        requestId: {description: DescribeQuotasResponse_requestId, type: string}
      type: object
    DescribeRegionsRequest:
      properties:
        Filter:
          description: DescribeRegionsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        RegionName:
          description: DescribeRegionsRequest_RegionName
          items: {description: DescribeRegionsRequest_RegionName, type: string}
          type: array
      type: object
    DescribeRegionsResponse:
      properties:
        regionInfo:
          description: DescribeRegionsResponse_regionInfo
          items: {$ref: '#/components/schemas/regionInfo'}
          type: array
        requestId: {description: DescribeRegionsResponse_requestId, type: string}
      type: object
    DescribeRouteTablesRequest:
      properties:
        Filter:
          description: DescribeRouteTablesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        RouteTableId:
          description: DescribeRouteTablesRequest_RouteTableId
          items: {description: DescribeRouteTablesRequest_RouteTableId, type: string}
          type: array
      type: object
    DescribeRouteTablesResponse:
      properties:
        requestId: {description: DescribeRouteTablesResponse_requestId, type: string}
        routeTableSet:
          description: DescribeRouteTablesResponse_routeTableSet
          items: {$ref: '#/components/schemas/routeTableSet'}
          type: array
      type: object
    DescribeSecurityGroupsRequest:
      properties:
        Filter:
          description: DescribeSecurityGroupsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        GroupId:
          description: DescribeSecurityGroupsRequest_GroupId
          items: {description: DescribeSecurityGroupsRequest_GroupId, type: string}
          type: array
        GroupName:
          description: DescribeSecurityGroupsRequest_GroupName
          items: {description: DescribeSecurityGroupsRequest_GroupName, type: string}
          type: array
      type: object
    DescribeSecurityGroupsResponse:
      properties:
        requestId: {description: DescribeSecurityGroupsResponse_requestId, type: string}
        securityGroupInfo:
          description: DescribeSecurityGroupsResponse_securityGroupInfo
          items: {$ref: '#/components/schemas/securityGroupInfo'}
          type: array
      type: object
    DescribeSnapshotAttributeRequest:
      properties:
        Attribute: {description: DescribeSnapshotAttributeRequest_Attribute, type: string}
        SnapshotId: {description: DescribeSnapshotAttributeRequest_SnapshotId, type: string}
      required: [SnapshotId, Attribute]
      type: object
    DescribeSnapshotAttributeResponse:
      properties:
        createVolumePermission:
          description: DescribeSnapshotAttributeResponse_createVolumePermission
          items: {$ref: '#/components/schemas/createVolumePermission'}
          type: array
        requestId: {description: DescribeSnapshotAttributeResponse_requestId, type: string}
        snapshotId: {description: DescribeSnapshotAttributeResponse_snapshotId, type: string}
      type: object
    DescribeSnapshotExportTasksRequest:
      properties:
        SnapshotExportTaskId:
          description: DescribeSnapshotExportTasksRequest_SnapshotExportTaskId
          items: {description: DescribeSnapshotExportTasksRequest_SnapshotExportTaskId,
            type: string}
          type: array
      type: object
    DescribeSnapshotExportTasksResponse:
      properties:
        requestId: {description: DescribeSnapshotExportTasksResponse_requestId, type: string}
        snapshotExportTask:
          description: DescribeSnapshotExportTasksResponse_snapshotExportTask
          items: {$ref: '#/components/schemas/snapshotExportTask'}
          type: array
      type: object
    DescribeSnapshotsRequest:
      properties:
        DryRun: {description: DescribeSnapshotsRequest_DryRun, type: boolean}
        Filter:
          description: DescribeSnapshotsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        MaxResults: {description: DescribeSnapshotsRequest_MaxResults, type: integer}
        NextToken: {description: DescribeSnapshotsRequest_NextToken, type: string}
        Owner:
          description: DescribeSnapshotsRequest_Owner
          items: {description: DescribeSnapshotsRequest_Owner, type: string}
          type: array
        RestorableBy:
          description: DescribeSnapshotsRequest_RestorableBy
          items: {description: DescribeSnapshotsRequest_RestorableBy, type: string}
          type: array
        SnapshotId:
          description: DescribeSnapshotsRequest_SnapshotId
          items: {description: DescribeSnapshotsRequest_SnapshotId, type: string}
          type: array
      type: object
    DescribeSnapshotsResponse:
      properties:
        nextToken: {description: DescribeSnapshotsResponse_nextToken, type: string}
        requestId: {description: DescribeSnapshotsResponse_requestId, type: string}
        snapshotSet:
          description: DescribeSnapshotsResponse_snapshotSet
          items: {$ref: '#/components/schemas/snapshotSet'}
          type: array
      type: object
    DescribeSubnetsRequest:
      properties:
        Filter:
          description: DescribeSubnetsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        SubnetId:
          description: DescribeSubnetsRequest_SubnetId
          items: {description: DescribeSubnetsRequest_SubnetId, type: string}
          type: array
      type: object
    DescribeSubnetsResponse:
      properties:
        requestId: {description: DescribeSubnetsResponse_requestId, type: string}
        subnetSet:
          description: DescribeSubnetsResponse_subnetSet
          items: {$ref: '#/components/schemas/subnetSet'}
          type: array
      type: object
    DescribeTagsRequest:
      properties:
        Filter:
          description: DescribeTagsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        MaxResults: {description: DescribeTagsRequest_MaxResults, type: integer}
        NextToken: {description: DescribeTagsRequest_NextToken, type: string}
      type: object
    DescribeTagsResponse:
      properties:
        nextToken: {description: DescribeTagsResponse_nextToken, type: string}
        requestId: {description: DescribeTagsResponse_requestId, type: string}
        tagSet:
          description: DescribeTagsResponse_tagSet
          items: {$ref: '#/components/schemas/tagSet_1'}
          type: array
      type: object
    DescribeVolumesRequest:
      properties:
        Filter:
          description: DescribeVolumesRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        MaxResults: {description: DescribeVolumesRequest_MaxResults, type: integer}
        NextToken: {description: DescribeVolumesRequest_NextToken, type: string}
        VolumeId:
          description: DescribeVolumesRequest_VolumeId
          items: {description: DescribeVolumesRequest_VolumeId, type: string}
          type: array
      type: object
    DescribeVolumesResponse:
      properties:
        nextToken: {description: DescribeVolumesResponse_nextToken, type: string}
        requestId: {description: DescribeVolumesResponse_requestId, type: string}
        volumeSet:
          description: DescribeVolumesResponse_volumeSet
          items: {$ref: '#/components/schemas/volumeSet'}
          type: array
      type: object
    DescribeVpcAttributeRequest:
      properties:
        Attribute: {description: DescribeVpcAttributeRequest_Attribute, type: string}
        VpcId: {description: DescribeVpcAttributeRequest_VpcId, type: string}
      required: [VpcId, Attribute]
      type: object
    DescribeVpcAttributeResponse:
      properties:
        enableDnsHostnames: {$ref: '#/components/schemas/enableDnsHostnames'}
        enableDnsSupport: {$ref: '#/components/schemas/enableDnsSupport'}
        requestId: {description: DescribeVpcAttributeResponse_requestId, type: string}
        vpcId: {description: DescribeVpcAttributeResponse_vpcId, type: string}
      type: object
    DescribeVpcEndpointServicesRequest:
      properties:
        DryRun: {description: DescribeVpcEndpointServicesRequest_DryRun, type: boolean}
        MaxResults: {description: DescribeVpcEndpointServicesRequest_MaxResults, type: integer}
        NextToken: {description: DescribeVpcEndpointServicesRequest_NextToken, type: string}
      type: object
    DescribeVpcEndpointServicesResponse:
      properties:
        nextToken: {description: DescribeVpcEndpointServicesResponse_nextToken, type: string}
        requestId: {description: DescribeVpcEndpointServicesResponse_requestId, type: string}
        serviceNameSet:
          description: DescribeVpcEndpointServicesResponse_serviceNameSet
          items: {description: DescribeVpcEndpointServicesResponse_serviceNameSet,
            type: string}
          type: array
      type: object
    DescribeVpcEndpointsRequest:
      properties:
        Filter:
          description: DescribeVpcEndpointsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        VpcEndpointId:
          description: DescribeVpcEndpointsRequest_VpcEndpointId
          items: {description: DescribeVpcEndpointsRequest_VpcEndpointId, type: string}
          type: array
      type: object
    DescribeVpcEndpointsResponse:
      properties:
        requestId: {description: DescribeVpcEndpointsResponse_requestId, type: string}
        vpcEndpointSet:
          description: DescribeVpcEndpointsResponse_vpcEndpointSet
          items: {$ref: '#/components/schemas/vpcEndpointSet'}
          type: array
      type: object
    DescribeVpcPeeringConnectionsRequest:
      properties:
        Filter:
          description: DescribeVpcPeeringConnectionsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        VpcPeeringConnectionId:
          description: DescribeVpcPeeringConnectionsRequest_VpcPeeringConnectionId
          items: {description: DescribeVpcPeeringConnectionsRequest_VpcPeeringConnectionId,
            type: string}
          type: array
      type: object
    DescribeVpcPeeringConnectionsResponse:
      properties:
        requestId: {description: DescribeVpcPeeringConnectionsResponse_requestId,
          type: string}
        vpcPeeringConnectionSet:
          description: DescribeVpcPeeringConnectionsResponse_vpcPeeringConnectionSet
          items: {$ref: '#/components/schemas/vpcPeeringConnectionSet'}
          type: array
      type: object
    DescribeVpcsRequest:
      properties:
        Filter:
          description: DescribeVpcsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        VpcId:
          description: DescribeVpcsRequest_VpcId
          items: {description: DescribeVpcsRequest_VpcId, type: string}
          type: array
      type: object
    DescribeVpcsResponse:
      properties:
        requestId: {description: DescribeVpcsResponse_requestId, type: string}
        vpcSet: {$ref: '#/components/schemas/vpcSet'}
      type: object
    DescribeVpnConnectionsRequest:
      properties:
        DryRun: {description: DescribeVpnConnectionsRequest_DryRun, type: boolean}
        Filter:
          description: DescribeVpnConnectionsRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        VpnConnectionId:
          description: DescribeVpnConnectionsRequest_VpnConnectionId
          items: {description: DescribeVpnConnectionsRequest_VpnConnectionId, type: string}
          type: array
      type: object
    DescribeVpnConnectionsResponse:
      properties:
        requestId: {description: DescribeVpnConnectionsResponse_requestId, type: string}
        vpnConnectionSet:
          description: DescribeVpnConnectionsResponse_vpnConnectionSet
          items: {$ref: '#/components/schemas/vpnConnectionSet'}
          type: array
      type: object
    DescribeVpnGatewaysRequest:
      properties:
        DryRun: {description: DescribeVpnGatewaysRequest_DryRun, type: boolean}
        Filter:
          description: DescribeVpnGatewaysRequest_Filter
          items: {$ref: '#/components/schemas/Filter'}
          type: array
        VpnGatewayId:
          description: DescribeVpnGatewaysRequest_VpnGatewayId
          items: {description: DescribeVpnGatewaysRequest_VpnGatewayId, type: string}
          type: array
      type: object
    DescribeVpnGatewaysResponse:
      properties:
        requestId: {description: DescribeVpnGatewaysResponse_requestId, type: string}
        vpnGatewaySet:
          description: DescribeVpnGatewaysResponse_vpnGatewaySet
          items: {$ref: '#/components/schemas/vpnGatewaySet'}
          type: array
      type: object
    Description:
      description: Description
      properties:
        Value: {description: Description_Value, type: string}
      type: object
    DetachInternetGatewayRequest:
      properties:
        InternetGatewayId: {description: DetachInternetGatewayRequest_InternetGatewayId,
          type: string}
        VpcId: {description: DetachInternetGatewayRequest_VpcId, type: string}
      type: object
    DetachInternetGatewayResponse:
      properties:
        requestId: {description: DetachInternetGatewayResponse_requestId, type: string}
        return: {description: DetachInternetGatewayResponse_return, type: boolean}
      type: object
    DetachNetworkInterfaceRequest:
      properties:
        AttachmentId: {description: DetachNetworkInterfaceRequest_AttachmentId, type: string}
        DryRun: {description: DetachNetworkInterfaceRequest_DryRun, type: boolean}
      required: [AttachmentId]
      type: object
    DetachNetworkInterfaceResponse:
      properties:
        requestId: {description: DetachNetworkInterfaceResponse_requestId, type: string}
        return: {description: DetachNetworkInterfaceResponse_return, type: boolean}
      type: object
    DetachVolumeRequest:
      properties:
        Device: {description: DetachVolumeRequest_Device, type: string}
        DryRun: {description: DetachVolumeRequest_DryRun, type: boolean}
        Force: {description: DetachVolumeRequest_Force, type: boolean}
        InstanceId: {description: DetachVolumeRequest_InstanceId, type: string}
        VolumeId: {description: DetachVolumeRequest_VolumeId, type: string}
      required: [VolumeId]
      type: object
    DetachVolumeResponse:
      properties:
        attachTime: {description: DetachVolumeResponse_attachTime, type: string}
        deleteOnTermination: {description: DetachVolumeResponse_deleteOnTermination,
          type: boolean}
        device: {description: DetachVolumeResponse_device, type: string}
        instanceId: {description: DetachVolumeResponse_instanceId, type: string}
        requestId: {description: DetachVolumeResponse_requestId, type: string}
        status: {description: DetachVolumeResponse_status, type: string}
        volumeId: {description: DetachVolumeResponse_volumeId, type: string}
      type: object
    DetachVpnGatewayRequest:
      properties:
        DryRun: {description: DetachVpnGatewayRequest_DryRun, type: boolean}
        VpcId: {description: DetachVpnGatewayRequest_VpcId, type: string}
        VpnGatewayId: {description: DetachVpnGatewayRequest_VpnGatewayId, type: string}
      type: object
    DetachVpnGatewayResponse:
      properties:
        requestId: {description: DetachVpnGatewayResponse_requestId, type: string}
        return: {description: DetachVpnGatewayResponse_return, type: boolean}
      type: object
    Details:
      description: Details
      properties:
        impairedSince: {description: Details_impairedSince, type: string}
        name: {description: Details_name, type: string}
        status: {description: Details_status, type: string}
      type: object
    DhcpConfiguration:
      description: DhcpConfiguration
      properties:
        Key: {description: DhcpConfiguration_Key, type: string}
        Value:
          description: DhcpConfiguration_Value
          items: {description: DhcpConfiguration_Value, type: string}
          type: array
      type: object
    DisableApiTermination:
      description: DisableApiTermination
      properties:
        Value: {description: DisableApiTermination_Value, type: boolean}
      type: object
    DisableVgwRoutePropagationRequest:
      properties:
        GatewayId: {description: DisableVgwRoutePropagationRequest_GatewayId, type: string}
        RouteTableId: {description: DisableVgwRoutePropagationRequest_RouteTableId,
          type: string}
      type: object
    DisableVgwRoutePropagationResponse:
      properties:
        requestId: {description: DisableVgwRoutePropagationResponse_requestId, type: string}
        return: {description: DisableVgwRoutePropagationResponse_return, type: boolean}
      type: object
    DisassociateAddressRequest:
      properties:
        AssociationId: {description: DisassociateAddressRequest_AssociationId, type: string}
        PublicIp: {description: DisassociateAddressRequest_PublicIp, type: string}
      type: object
    DisassociateAddressResponse:
      properties:
        requestId: {description: DisassociateAddressResponse_requestId, type: string}
        return: {description: DisassociateAddressResponse_return, type: boolean}
      type: object
    DisassociateRouteTableRequest:
      properties:
        AssociationId: {description: DisassociateRouteTableRequest_AssociationId,
          type: string}
      required: [AssociationId]
      type: object
    DisassociateRouteTableResponse:
      properties:
        requestId: {description: DisassociateRouteTableResponse_requestId, type: string}
        return: {description: DisassociateRouteTableResponse_return, type: boolean}
      type: object
    EbsOptimized:
      description: EbsOptimized
      properties:
        Value: {description: EbsOptimized_Value, type: boolean}
      type: object
    Ebs_0:
      description: Ebs_0
      properties:
        DeleteOnTermination: {description: Ebs_0_DeleteOnTermination, type: boolean}
        Iops: {description: Ebs_0_Iops, type: integer}
        SnapshotId: {description: Ebs_0_SnapshotId, type: string}
        VolumeSize: {description: Ebs_0_VolumeSize, type: integer}
        VolumeType: {description: Ebs_0_VolumeType, type: string}
      type: object
    Ebs_1:
      description: Ebs_1
      properties:
        DeleteOnTermination: {description: Ebs_1_DeleteOnTermination, type: boolean}
        VolumeId: {description: Ebs_1_VolumeId, type: string}
      type: object
    EnableDnsHostnames:
      description: EnableDnsHostnames
      properties:
        Value: {description: EnableDnsHostnames_Value, type: boolean}
      type: object
    EnableDnsSupport:
      description: EnableDnsSupport
      properties:
        Value: {description: EnableDnsSupport_Value, type: boolean}
      type: object
    EnableVgwRoutePropagationRequest:
      properties:
        GatewayId: {description: EnableVgwRoutePropagationRequest_GatewayId, type: string}
        RouteTableId: {description: EnableVgwRoutePropagationRequest_RouteTableId,
          type: string}
      type: object
    EnableVgwRoutePropagationResponse:
      properties:
        requestId: {description: EnableVgwRoutePropagationResponse_requestId, type: string}
        return: {description: EnableVgwRoutePropagationResponse_return, type: boolean}
      type: object
    ExportToOsu_0:
      description: ExportToOsu_0
      properties:
        DiskImageFormat: {description: ExportToOsu_0_DiskImageFormat, type: string}
        OsuAkSk: {$ref: '#/components/schemas/OsuAkSk'}
        OsuBucket: {description: ExportToOsu_0_OsuBucket, type: string}
        OsuManifestUrl: {description: ExportToOsu_0_OsuManifestUrl, type: string}
        OsuPrefix: {description: ExportToOsu_0_OsuPrefix, type: string}
      type: object
    ExportToOsu_1:
      description: ExportToOsu_1
      properties:
        DiskImageFormat: {description: ExportToOsu_1_DiskImageFormat, type: string}
        OsuBucket: {description: ExportToOsu_1_OsuBucket, type: string}
        OsuKey: {description: ExportToOsu_1_OsuKey, type: string}
        OsuPrefix: {description: ExportToOsu_1_OsuPrefix, type: string}
        aksk: {$ref: '#/components/schemas/aksk'}
      type: object
    Filter:
      description: Filter
      properties:
        Name: {description: Filter_Name, type: string}
        Value:
          description: Filter_Value
          items: {description: Filter_Value, type: string}
          type: array
      type: object
    GetConsoleOutputRequest:
      properties:
        InstanceId: {description: GetConsoleOutputRequest_InstanceId, type: string}
      type: object
    GetConsoleOutputResponse:
      properties:
        instanceId: {description: GetConsoleOutputResponse_instanceId, type: string}
        output: {description: GetConsoleOutputResponse_output, type: string}
        requestId: {description: GetConsoleOutputResponse_requestId, type: string}
        timestamp: {description: GetConsoleOutputResponse_timestamp, type: string}
      type: object
    GetPasswordDataRequest:
      properties:
        InstanceId: {description: GetPasswordDataRequest_InstanceId, type: string}
      type: object
    GetPasswordDataResponse:
      properties:
        instanceId: {description: GetPasswordDataResponse_instanceId, type: string}
        passwordData: {description: GetPasswordDataResponse_passwordData, type: string}
        requestId: {description: GetPasswordDataResponse_requestId, type: string}
        timestamp: {description: GetPasswordDataResponse_timestamp, type: string}
      type: object
    GetProductTypeRequest:
      properties:
        ImageId: {description: GetProductTypeRequest_ImageId, type: string}
        SnapshotId: {description: GetProductTypeRequest_SnapshotId, type: string}
      type: object
    GetProductTypeResponse:
      properties:
        productType: {$ref: '#/components/schemas/productType'}
        requestId: {description: GetProductTypeResponse_requestId, type: string}
      type: object
    GetProductTypesRequest:
      properties:
        ImageId: {description: GetProductTypesRequest_ImageId, type: string}
        SnapshotId: {description: GetProductTypesRequest_SnapshotId, type: string}
      type: object
    GetProductTypesResponse:
      properties:
        productTypeSet:
          description: GetProductTypesResponse_productTypeSet
          items: {$ref: '#/components/schemas/productTypeSet'}
          type: array
        requestId: {description: GetProductTypesResponse_requestId, type: string}
      type: object
    Groups:
      description: Groups
      properties:
        GroupId: {description: Groups_GroupId, type: string}
        GroupName: {description: Groups_GroupName, type: string}
        UserId: {description: Groups_UserId, type: string}
      type: object
    ImportKeyPairRequest:
      properties:
        KeyName: {description: ImportKeyPairRequest_KeyName, type: string}
        PublicKeyMaterial: {description: ImportKeyPairRequest_PublicKeyMaterial, type: string}
      required: [KeyName, PublicKeyMaterial]
      type: object
    ImportKeyPairResponse:
      properties:
        keyFingerprint: {description: ImportKeyPairResponse_keyFingerprint, type: string}
        keyName: {description: ImportKeyPairResponse_keyName, type: string}
        requestId: {description: ImportKeyPairResponse_requestId, type: string}
      type: object
    ImportSnapshotRequest:
      properties:
        description: {description: ImportSnapshotRequest_description, type: string}
        snapshotLocation: {description: ImportSnapshotRequest_snapshotLocation, type: string}
        snapshotSize: {description: ImportSnapshotRequest_snapshotSize, type: string}
      required: [snapshotLocation, snapshotSize]
      type: object
    ImportSnapshotResponse:
      properties:
        description: {description: ImportSnapshotResponse_description, type: string}
        encrypted: {description: ImportSnapshotResponse_encrypted, type: boolean}
        id: {description: ImportSnapshotResponse_id, type: string}
        owner_alias: {description: ImportSnapshotResponse_owner_alias, type: string}
        progress: {description: ImportSnapshotResponse_progress, type: string}
        requestId: {description: ImportSnapshotResponse_requestId, type: string}
        start_time: {description: ImportSnapshotResponse_start_time, type: string}
        status: {description: ImportSnapshotResponse_status, type: string}
        volume_size: {description: ImportSnapshotResponse_volume_size, type: integer}
      type: object
    InstanceInitiatedShutdownBehavior:
      description: InstanceInitiatedShutdownBehavior
      properties:
        Value: {description: InstanceInitiatedShutdownBehavior_Value, type: string}
      type: object
    InstanceType:
      description: InstanceType
      properties:
        Value: {description: InstanceType_Value, type: string}
      type: object
    IpPermissions:
      description: IpPermissions
      properties:
        FromPort: {description: IpPermissions_FromPort, type: integer}
        Groups:
          description: IpPermissions_Groups
          items: {$ref: '#/components/schemas/Groups'}
          type: array
        IpProtocol: {description: IpPermissions_IpProtocol, type: string}
        IpRanges:
          description: IpPermissions_IpRanges
          items: {$ref: '#/components/schemas/IpRanges'}
          type: array
        PrefixListIds:
          description: IpPermissions_PrefixListIds
          items: {$ref: '#/components/schemas/PrefixListIds'}
          type: array
        ToPort: {description: IpPermissions_ToPort, type: integer}
      type: object
    IpRanges:
      description: IpRanges
      properties:
        CidrIp: {description: IpRanges_CidrIp, type: string}
      type: object
    LaunchPermission:
      description: LaunchPermission
      properties:
        Add:
          description: LaunchPermission_Add
          items: {$ref: '#/components/schemas/Add'}
          type: array
        Remove:
          description: LaunchPermission_Remove
          items: {$ref: '#/components/schemas/Remove'}
          type: array
      type: object
    MapPublicIpOnLaunch:
      description: MapPublicIpOnLaunch
      properties:
        Value: {description: MapPublicIpOnLaunch_Value, type: boolean}
      type: object
    ModifyImageAttributeRequest:
      properties:
        Description: {$ref: '#/components/schemas/Description'}
        ImageId: {description: ModifyImageAttributeRequest_ImageId, type: string}
        LaunchPermission: {$ref: '#/components/schemas/LaunchPermission'}
        ProductCode:
          description: ModifyImageAttributeRequest_ProductCode
          items: {description: ModifyImageAttributeRequest_ProductCode, type: string}
          type: array
      required: [ImageId]
      type: object
    ModifyImageAttributeResponse:
      properties:
        requestId: {description: ModifyImageAttributeResponse_requestId, type: string}
        return: {description: ModifyImageAttributeResponse_return, type: boolean}
      type: object
    ModifyInstanceAttributeRequest:
      properties:
        BlockDeviceMapping:
          description: ModifyInstanceAttributeRequest_BlockDeviceMapping
          items: {$ref: '#/components/schemas/BlockDeviceMapping_0'}
          type: array
        DisableApiTermination: {$ref: '#/components/schemas/DisableApiTermination'}
        EbsOptimized: {$ref: '#/components/schemas/EbsOptimized'}
        GroupId:
          description: ModifyInstanceAttributeRequest_GroupId
          items: {description: ModifyInstanceAttributeRequest_GroupId, type: string}
          type: array
        InstanceId: {description: ModifyInstanceAttributeRequest_InstanceId, type: string}
        InstanceInitiatedShutdownBehavior: {$ref: '#/components/schemas/InstanceInitiatedShutdownBehavior'}
        InstanceType: {$ref: '#/components/schemas/InstanceType'}
        SourceDestCheck: {$ref: '#/components/schemas/SourceDestCheck'}
        UserData: {$ref: '#/components/schemas/UserData'}
      required: [InstanceId]
      type: object
    ModifyInstanceAttributeResponse:
      properties:
        requestId: {description: ModifyInstanceAttributeResponse_requestId, type: string}
        return: {description: ModifyInstanceAttributeResponse_return, type: boolean}
      type: object
    ModifyInstanceKeypairRequest:
      properties:
        InstanceId: {description: ModifyInstanceKeypairRequest_InstanceId, type: string}
        KeyName: {description: ModifyInstanceKeypairRequest_KeyName, type: string}
      required: [InstanceId, KeyName]
      type: object
    ModifyInstanceKeypairResponse:
      properties:
        requestId: {description: ModifyInstanceKeypairResponse_requestId, type: string}
      type: object
    ModifyNetworkInterfaceAttributeRequest:
      properties:
        Attachment: {$ref: '#/components/schemas/Attachment'}
        Description: {$ref: '#/components/schemas/Description'}
        DryRun: {description: ModifyNetworkInterfaceAttributeRequest_DryRun, type: boolean}
        Groups: {description: ModifyNetworkInterfaceAttributeRequest_Groups, type: string}
        NetworkInterfaceId: {description: ModifyNetworkInterfaceAttributeRequest_NetworkInterfaceId,
          type: string}
      required: [NetworkInterfaceId]
      type: object
    ModifyNetworkInterfaceAttributeResponse:
      properties:
        requestId: {description: ModifyNetworkInterfaceAttributeResponse_requestId,
          type: string}
        return: {description: ModifyNetworkInterfaceAttributeResponse_return, type: boolean}
      type: object
    ModifySnapshotAttributeRequest:
      properties:
        CreateVolumePermission: {$ref: '#/components/schemas/CreateVolumePermission'}
        DryRun: {description: ModifySnapshotAttributeRequest_DryRun, type: boolean}
        SnapshotId: {description: ModifySnapshotAttributeRequest_SnapshotId, type: string}
      required: [SnapshotId]
      type: object
    ModifySnapshotAttributeResponse:
      properties:
        requestId: {description: ModifySnapshotAttributeResponse_requestId, type: string}
        return: {description: ModifySnapshotAttributeResponse_return, type: boolean}
      type: object
    ModifySubnetAttributeRequest:
      properties:
        MapPublicIpOnLaunch: {$ref: '#/components/schemas/MapPublicIpOnLaunch'}
        SubnetId: {description: ModifySubnetAttributeRequest_SubnetId, type: string}
      required: [SubnetId]
      type: object
    ModifySubnetAttributeResponse:
      properties:
        requestId: {description: ModifySubnetAttributeResponse_requestId, type: string}
        return: {description: ModifySubnetAttributeResponse_return, type: boolean}
      type: object
    ModifyVpcAttributeRequest:
      properties:
        EnableDnsHostnames: {$ref: '#/components/schemas/EnableDnsHostnames'}
        EnableDnsSupport: {$ref: '#/components/schemas/EnableDnsSupport'}
        VpcId: {description: ModifyVpcAttributeRequest_VpcId, type: string}
      required: [VpcId]
      type: object
    ModifyVpcAttributeResponse:
      properties:
        requestId: {description: ModifyVpcAttributeResponse_requestId, type: string}
        return: {description: ModifyVpcAttributeResponse_return, type: boolean}
      type: object
    ModifyVpcEndpointRequest:
      properties:
        AddRouteTableId:
          description: ModifyVpcEndpointRequest_AddRouteTableId
          items: {description: ModifyVpcEndpointRequest_AddRouteTableId, type: string}
          type: array
        RemoveRouteTableId:
          description: ModifyVpcEndpointRequest_RemoveRouteTableId
          items: {description: ModifyVpcEndpointRequest_RemoveRouteTableId, type: string}
          type: array
        VpcEndpointId: {description: ModifyVpcEndpointRequest_VpcEndpointId, type: string}
      required: [VpcEndpointId]
      type: object
    ModifyVpcEndpointResponse:
      properties:
        requestId: {description: ModifyVpcEndpointResponse_requestId, type: string}
        return: {description: ModifyVpcEndpointResponse_return, type: boolean}
      type: object
    NetworkInterface:
      description: NetworkInterface
      properties:
        DeleteOnTermination: {description: NetworkInterface_DeleteOnTermination, type: boolean}
        Description: {description: NetworkInterface_Description, type: string}
        DeviceIndex: {description: NetworkInterface_DeviceIndex, type: integer}
        NetworkInterfaceId: {description: NetworkInterface_NetworkInterfaceId, type: string}
        PrivateIpAddress: {description: NetworkInterface_PrivateIpAddress, type: string}
        PrivateIpAddressesSet:
          description: NetworkInterface_PrivateIpAddressesSet
          items: {$ref: '#/components/schemas/PrivateIpAddressesSet'}
          type: array
        SecondaryPrivateIpAddressCount: {description: NetworkInterface_SecondaryPrivateIpAddressCount,
          type: integer}
        SecurityGroupId:
          description: NetworkInterface_SecurityGroupId
          items: {description: NetworkInterface_SecurityGroupId, type: string}
          type: array
        SubnetId: {description: NetworkInterface_SubnetId, type: string}
      type: object
    Options:
      description: Options
      properties:
        StaticRoutesOnly: {description: Options_StaticRoutesOnly, type: boolean}
      type: object
    OsuAkSk:
      description: OsuAkSk
      properties:
        AccessKey: {description: OsuAkSk_AccessKey, type: string}
        SecretKey: {description: OsuAkSk_SecretKey, type: string}
      type: object
    Placement:
      description: Placement
      properties:
        AvailabilityZone: {description: Placement_AvailabilityZone, type: string}
        Tenancy: {description: Placement_Tenancy, type: string}
      type: object
    PrefixListIds:
      description: PrefixListIds
      properties:
        PrefixListId: {description: PrefixListIds_PrefixListId, type: string}
      type: object
    PrivateIpAddressesSet:
      description: PrivateIpAddressesSet
      properties:
        Primary: {description: PrivateIpAddressesSet_Primary, type: boolean}
        PrivateIpAddress: {description: PrivateIpAddressesSet_PrivateIpAddress, type: string}
      type: object
    QuotaSet:
      description: QuotaSet
      properties:
        Description: {description: QuotaSet_Description, type: string}
        DisplayName: {description: QuotaSet_DisplayName, type: string}
        GroupName: {description: QuotaSet_GroupName, type: string}
        MaxQuotaValue: {description: QuotaSet_MaxQuotaValue, type: integer}
        Name: {description: QuotaSet_Name, type: string}
        OwnerId: {description: QuotaSet_OwnerId, type: string}
        UsedQuotaValue: {description: QuotaSet_UsedQuotaValue, type: integer}
      type: object
    ReadPublicIpRangesRequest:
      properties: {}
      type: object
    ReadPublicIpRangesResponse:
      properties:
        publicIpSet: {description: ReadPublicIpRangesResponse_publicIpSet, type: string}
        requestId: {description: ReadPublicIpRangesResponse_requestId, type: string}
      type: object
    RebootInstancesRequest:
      properties:
        InstanceId:
          description: RebootInstancesRequest_InstanceId
          items: {description: RebootInstancesRequest_InstanceId, type: string}
          type: array
      required: [InstanceId]
      type: object
    RebootInstancesResponse:
      properties:
        requestId: {description: RebootInstancesResponse_requestId, type: string}
        return: {description: RebootInstancesResponse_return, type: boolean}
      type: object
    RegisterImageRequest:
      properties:
        Architecture: {description: RegisterImageRequest_Architecture, type: string}
        BlockDeviceMapping:
          description: RegisterImageRequest_BlockDeviceMapping
          items: {$ref: '#/components/schemas/BlockDeviceMapping_1'}
          type: array
        Description: {description: RegisterImageRequest_Description, type: string}
        ImageLocation: {description: RegisterImageRequest_ImageLocation, type: string}
        Name: {description: RegisterImageRequest_Name, type: string}
        RootDeviceName: {description: RegisterImageRequest_RootDeviceName, type: string}
      required: [Name]
      type: object
    RegisterImageResponse:
      properties:
        imageId: {description: RegisterImageResponse_imageId, type: string}
        requestId: {description: RegisterImageResponse_requestId, type: string}
      type: object
    RejectVpcPeeringConnectionRequest:
      properties:
        VpcPeeringConnectionId: {description: RejectVpcPeeringConnectionRequest_VpcPeeringConnectionId,
          type: string}
      required: [VpcPeeringConnectionId]
      type: object
    RejectVpcPeeringConnectionResponse:
      properties:
        requestId: {description: RejectVpcPeeringConnectionResponse_requestId, type: string}
        return: {description: RejectVpcPeeringConnectionResponse_return, type: boolean}
      type: object
    ReleaseAddressRequest:
      properties:
        AllocationId: {description: ReleaseAddressRequest_AllocationId, type: string}
        PublicIp: {description: ReleaseAddressRequest_PublicIp, type: string}
      type: object
    ReleaseAddressResponse:
      properties:
        requestId: {description: ReleaseAddressResponse_requestId, type: string}
        return: {description: ReleaseAddressResponse_return, type: boolean}
      type: object
    Remove:
      description: Remove
      properties:
        Group: {description: Remove_Group, type: string}
        UserId: {description: Remove_UserId, type: string}
      type: object
    ReplaceRouteRequest:
      properties:
        DestinationCidrBlock: {description: ReplaceRouteRequest_DestinationCidrBlock,
          type: string}
        GatewayId: {description: ReplaceRouteRequest_GatewayId, type: string}
        InstanceId: {description: ReplaceRouteRequest_InstanceId, type: string}
        NatGatewayId: {description: ReplaceRouteRequest_NatGatewayId, type: string}
        NetworkInterfaceId: {description: ReplaceRouteRequest_NetworkInterfaceId,
          type: string}
        RouteTableId: {description: ReplaceRouteRequest_RouteTableId, type: string}
        VpcPeeringConnectionId: {description: ReplaceRouteRequest_VpcPeeringConnectionId,
          type: string}
      required: [RouteTableId, DestinationCidrBlock]
      type: object
    ReplaceRouteResponse:
      properties:
        requestId: {description: ReplaceRouteResponse_requestId, type: string}
        return: {description: ReplaceRouteResponse_return, type: boolean}
      type: object
    ReplaceRouteTableAssociationRequest:
      properties:
        AssociationId: {description: ReplaceRouteTableAssociationRequest_AssociationId,
          type: string}
        RouteTableId: {description: ReplaceRouteTableAssociationRequest_RouteTableId,
          type: string}
      required: [AssociationId, RouteTableId]
      type: object
    ReplaceRouteTableAssociationResponse:
      properties:
        newAssociationId: {description: ReplaceRouteTableAssociationResponse_newAssociationId,
          type: string}
        requestId: {description: ReplaceRouteTableAssociationResponse_requestId, type: string}
      type: object
    RevokeSecurityGroupEgressRequest:
      properties:
        CidrIp: {description: RevokeSecurityGroupEgressRequest_CidrIp, type: string}
        FromPort: {description: RevokeSecurityGroupEgressRequest_FromPort, type: integer}
        GroupId: {description: RevokeSecurityGroupEgressRequest_GroupId, type: string}
        IpPermissions:
          description: RevokeSecurityGroupEgressRequest_IpPermissions
          items: {$ref: '#/components/schemas/IpPermissions'}
          type: array
        IpProtocol: {description: RevokeSecurityGroupEgressRequest_IpProtocol, type: string}
        SourceSecurityGroupName: {description: RevokeSecurityGroupEgressRequest_SourceSecurityGroupName,
          type: string}
        SourceSecurityGroupOwnerId: {description: RevokeSecurityGroupEgressRequest_SourceSecurityGroupOwnerId,
          type: string}
        ToPort: {description: RevokeSecurityGroupEgressRequest_ToPort, type: integer}
      required: [GroupId]
      type: object
    RevokeSecurityGroupEgressResponse:
      properties:
        requestId: {description: RevokeSecurityGroupEgressResponse_requestId, type: string}
        return: {description: RevokeSecurityGroupEgressResponse_return, type: boolean}
      type: object
    RevokeSecurityGroupIngressRequest:
      properties:
        CidrIp: {description: RevokeSecurityGroupIngressRequest_CidrIp, type: string}
        FromPort: {description: RevokeSecurityGroupIngressRequest_FromPort, type: integer}
        GroupId: {description: RevokeSecurityGroupIngressRequest_GroupId, type: string}
        GroupName: {description: RevokeSecurityGroupIngressRequest_GroupName, type: string}
        IpPermissions:
          description: RevokeSecurityGroupIngressRequest_IpPermissions
          items: {$ref: '#/components/schemas/IpPermissions'}
          type: array
        IpProtocol: {description: RevokeSecurityGroupIngressRequest_IpProtocol, type: string}
        SourceSecurityGroupName: {description: RevokeSecurityGroupIngressRequest_SourceSecurityGroupName,
          type: string}
        SourceSecurityGroupOwnerId: {description: RevokeSecurityGroupIngressRequest_SourceSecurityGroupOwnerId,
          type: string}
        ToPort: {description: RevokeSecurityGroupIngressRequest_ToPort, type: integer}
      type: object
    RevokeSecurityGroupIngressResponse:
      properties:
        requestId: {description: RevokeSecurityGroupIngressResponse_requestId, type: string}
        return: {description: RevokeSecurityGroupIngressResponse_return, type: boolean}
      type: object
    RunInstancesRequest:
      properties:
        BlockDeviceMapping:
          description: RunInstancesRequest_BlockDeviceMapping
          items: {$ref: '#/components/schemas/BlockDeviceMapping_1'}
          type: array
        ClientToken: {description: RunInstancesRequest_ClientToken, type: string}
        DisableApiTermination: {description: RunInstancesRequest_DisableApiTermination,
          type: boolean}
        DryRun: {description: RunInstancesRequest_DryRun, type: boolean}
        EbsOptimized: {description: RunInstancesRequest_EbsOptimized, type: boolean}
        ImageId: {description: RunInstancesRequest_ImageId, type: string}
        InstanceInitiatedShutdownBehavior: {description: RunInstancesRequest_InstanceInitiatedShutdownBehavior,
          type: string}
        InstanceType: {description: RunInstancesRequest_InstanceType, type: string}
        KeyName: {description: RunInstancesRequest_KeyName, type: string}
        MaxCount: {description: RunInstancesRequest_MaxCount, type: integer}
        MinCount: {description: RunInstancesRequest_MinCount, type: integer}
        NetworkInterface:
          description: RunInstancesRequest_NetworkInterface
          items: {$ref: '#/components/schemas/NetworkInterface'}
          type: array
        Placement: {$ref: '#/components/schemas/Placement'}
        PrivateIpAddress: {description: RunInstancesRequest_PrivateIpAddress, type: string}
        PrivateIpAddresses: {description: RunInstancesRequest_PrivateIpAddresses,
          type: string}
        SecurityGroup:
          description: RunInstancesRequest_SecurityGroup
          items: {description: RunInstancesRequest_SecurityGroup, type: string}
          type: array
        SecurityGroupId:
          description: RunInstancesRequest_SecurityGroupId
          items: {description: RunInstancesRequest_SecurityGroupId, type: string}
          type: array
        SubnetId: {description: RunInstancesRequest_SubnetId, type: string}
        UserData: {description: RunInstancesRequest_UserData, type: string}
      required: [ImageId, MinCount, MaxCount]
      type: object
    RunInstancesResponse:
      properties:
        groupSet:
          description: RunInstancesResponse_groupSet
          items: {$ref: '#/components/schemas/groupSet'}
          type: array
        instancesSet:
          description: RunInstancesResponse_instancesSet
          items: {$ref: '#/components/schemas/instancesSet_0'}
          type: array
        ownerId: {description: RunInstancesResponse_ownerId, type: string}
        requestId: {description: RunInstancesResponse_requestId, type: string}
        requesterId: {description: RunInstancesResponse_requesterId, type: string}
        reservationId: {description: RunInstancesResponse_reservationId, type: string}
      type: object
    SourceDestCheck:
      description: SourceDestCheck
      properties:
        Value: {description: SourceDestCheck_Value, type: boolean}
      type: object
    StartInstancesRequest:
      properties:
        InstanceId:
          description: StartInstancesRequest_InstanceId
          items: {description: StartInstancesRequest_InstanceId, type: string}
          type: array
      required: [InstanceId]
      type: object
    StartInstancesResponse:
      properties:
        instancesSet:
          description: StartInstancesResponse_instancesSet
          items: {$ref: '#/components/schemas/instancesSet_1'}
          type: array
        requestId: {description: StartInstancesResponse_requestId, type: string}
      type: object
    StopInstancesRequest:
      properties:
        Force: {description: StopInstancesRequest_Force, type: boolean}
        InstanceId:
          description: StopInstancesRequest_InstanceId
          items: {description: StopInstancesRequest_InstanceId, type: string}
          type: array
      required: [InstanceId]
      type: object
    StopInstancesResponse:
      properties:
        instancesSet:
          description: StopInstancesResponse_instancesSet
          items: {$ref: '#/components/schemas/instancesSet_1'}
          type: array
        requestId: {description: StopInstancesResponse_requestId, type: string}
      type: object
    Tag:
      description: Tag
      properties:
        Key: {description: Tag_Key, type: string}
        Value: {description: Tag_Value, type: string}
      type: object
    TagSet:
      description: TagSet
      properties:
        Key: {description: TagSet_Key, type: string}
        Value: {description: TagSet_Value, type: string}
      type: object
    TerminateInstancesRequest:
      properties:
        InstanceId:
          description: TerminateInstancesRequest_InstanceId
          items: {description: TerminateInstancesRequest_InstanceId, type: string}
          type: array
      required: [InstanceId]
      type: object
    TerminateInstancesResponse:
      properties:
        instancesSet:
          description: TerminateInstancesResponse_instancesSet
          items: {$ref: '#/components/schemas/instancesSet_1'}
          type: array
        requestId: {description: TerminateInstancesResponse_requestId, type: string}
      type: object
    UnassignPrivateIpAddressesRequest:
      properties:
        NetworkInterfaceId: {description: UnassignPrivateIpAddressesRequest_NetworkInterfaceId,
          type: string}
        PrivateIpAddress:
          description: UnassignPrivateIpAddressesRequest_PrivateIpAddress
          items: {description: UnassignPrivateIpAddressesRequest_PrivateIpAddress,
            type: string}
          type: array
      required: [NetworkInterfaceId, PrivateIpAddress]
      type: object
    UnassignPrivateIpAddressesResponse:
      properties:
        requestId: {description: UnassignPrivateIpAddressesResponse_requestId, type: string}
        return: {description: UnassignPrivateIpAddressesResponse_return, type: boolean}
      type: object
    UserData:
      description: UserData
      properties:
        Value: {description: UserData_Value, type: string}
      type: object
    accepterVpcInfo:
      description: accepterVpcInfo
      properties:
        cidrBlock: {description: accepterVpcInfo_cidrBlock, type: string}
        ownerId: {description: accepterVpcInfo_ownerId, type: string}
        vpcId: {description: accepterVpcInfo_vpcId, type: string}
      type: object
    addressesSet:
      description: addressesSet
      properties:
        allocationId: {description: addressesSet_allocationId, type: string}
        associationId: {description: addressesSet_associationId, type: string}
        domain: {description: addressesSet_domain, type: string}
        instanceId: {description: addressesSet_instanceId, type: string}
        networkInterfaceId: {description: addressesSet_networkInterfaceId, type: string}
        networkInterfaceOwnerId: {description: addressesSet_networkInterfaceOwnerId,
          type: string}
        privateIpAddress: {description: addressesSet_privateIpAddress, type: string}
        publicIp: {description: addressesSet_publicIp, type: string}
      type: object
    aksk:
      description: aksk
      properties:
        AccessKey: {description: aksk_AccessKey, type: string}
        SecretKey: {description: aksk_SecretKey, type: string}
      type: object
    associationSet:
      description: associationSet
      properties:
        main: {description: associationSet_main, type: boolean}
        routeTableAssociationId: {description: associationSet_routeTableAssociationId,
          type: string}
        routeTableId: {description: associationSet_routeTableId, type: string}
        subnetId: {description: associationSet_subnetId, type: string}
      type: object
    association_0:
      description: association_0
      properties:
        allocationId: {description: association_0_allocationId, type: string}
        associationId: {description: association_0_associationId, type: string}
        ipOwnerId: {description: association_0_ipOwnerId, type: string}
        publicDnsName: {description: association_0_publicDnsName, type: string}
        publicIp: {description: association_0_publicIp, type: string}
      type: object
    association_1:
      description: association_1
      properties:
        ipOwnerId: {description: association_1_ipOwnerId, type: string}
        publicDnsName: {description: association_1_publicDnsName, type: string}
        publicIp: {description: association_1_publicIp, type: string}
      type: object
    attachmentSet_0:
      description: attachmentSet_0
      properties:
        attachTime: {description: attachmentSet_0_attachTime, type: string}
        deleteOnTermination: {description: attachmentSet_0_deleteOnTermination, type: boolean}
        device: {description: attachmentSet_0_device, type: string}
        instanceId: {description: attachmentSet_0_instanceId, type: string}
        status: {description: attachmentSet_0_status, type: string}
        volumeId: {description: attachmentSet_0_volumeId, type: string}
      type: object
    attachmentSet_1:
      description: attachmentSet_1
      properties:
        state: {description: attachmentSet_1_state, type: string}
        vpcId: {description: attachmentSet_1_vpcId, type: string}
      type: object
    attachment_0:
      description: attachment_0
      properties:
        State: {description: attachment_0_State, type: string}
        VpcId: {description: attachment_0_VpcId, type: string}
      type: object
    attachment_1:
      description: attachment_1
      properties:
        attachTime: {description: attachment_1_attachTime, type: string}
        attachmentId: {description: attachment_1_attachmentId, type: string}
        deleteOnTermination: {description: attachment_1_deleteOnTermination, type: boolean}
        deviceIndex: {description: attachment_1_deviceIndex, type: integer}
        instanceId: {description: attachment_1_instanceId, type: string}
        instanceOwnerId: {description: attachment_1_instanceOwnerId, type: string}
        status: {description: attachment_1_status, type: string}
      type: object
    attachment_2:
      description: attachment_2
      properties:
        attachTime: {description: attachment_2_attachTime, type: string}
        attachmentId: {description: attachment_2_attachmentId, type: string}
        deleteOnTermination: {description: attachment_2_deleteOnTermination, type: boolean}
        deviceIndex: {description: attachment_2_deviceIndex, type: integer}
        status: {description: attachment_2_status, type: string}
      type: object
    availabilityZoneInfo:
      description: availabilityZoneInfo
      properties:
        regionName: {description: availabilityZoneInfo_regionName, type: string}
        zoneName: {description: availabilityZoneInfo_zoneName, type: string}
        zoneState: {description: availabilityZoneInfo_zoneState, type: string}
      type: object
    blockDeviceMapping_0:
      description: blockDeviceMapping_0
      properties:
        DeviceName: {description: blockDeviceMapping_0_DeviceName, type: string}
        Ebs: {$ref: '#/components/schemas/Ebs_0'}
        NoDevice: {description: blockDeviceMapping_0_NoDevice, type: string}
        VirtualName: {description: blockDeviceMapping_0_VirtualName, type: string}
      type: object
    blockDeviceMapping_1:
      description: blockDeviceMapping_1
      properties:
        deviceName: {description: blockDeviceMapping_1_deviceName, type: string}
        ebs: {$ref: '#/components/schemas/ebs'}
      type: object
    createVolumePermission:
      description: createVolumePermission
      properties:
        Group: {description: createVolumePermission_Group, type: string}
        UserId: {description: createVolumePermission_UserId, type: string}
      type: object
    currentState:
      description: currentState
      properties:
        code: {description: currentState_code, type: integer}
        name: {description: currentState_name, type: string}
      type: object
    customerGateway:
      description: customerGateway
      properties:
        bgpAsn: {description: customerGateway_bgpAsn, type: integer}
        customerGatewayId: {description: customerGateway_customerGatewayId, type: string}
        ipAddress: {description: customerGateway_ipAddress, type: string}
        state: {description: customerGateway_state, type: string}
        tagSet:
          description: customerGateway_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        type: {description: customerGateway_type, type: string}
      type: object
    customerGatewaySet:
      description: customerGatewaySet
      properties:
        bgpAsn: {description: customerGatewaySet_bgpAsn, type: integer}
        customerGatewayId: {description: customerGatewaySet_customerGatewayId, type: string}
        ipAddress: {description: customerGatewaySet_ipAddress, type: string}
        state: {description: customerGatewaySet_state, type: string}
        tagSet:
          description: customerGatewaySet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        type: {description: customerGatewaySet_type, type: string}
      type: object
    description:
      description: description
      properties:
        Value: {description: description_Value, type: string}
      type: object
    dhcpConfigurationSet:
      description: dhcpConfigurationSet
      properties:
        key: {description: dhcpConfigurationSet_key, type: string}
        valueSet:
          description: dhcpConfigurationSet_valueSet
          items: {$ref: '#/components/schemas/valueSet'}
          type: array
      type: object
    dhcpOptions:
      description: dhcpOptions
      properties:
        dhcpConfigurationSet:
          description: dhcpOptions_dhcpConfigurationSet
          items: {$ref: '#/components/schemas/dhcpConfigurationSet'}
          type: array
        dhcpOptionsId: {description: dhcpOptions_dhcpOptionsId, type: string}
        tagSet:
          description: dhcpOptions_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
      type: object
    dhcpOptionsSet:
      description: dhcpOptionsSet
      properties:
        dhcpConfigurationSet:
          description: dhcpOptionsSet_dhcpConfigurationSet
          items: {$ref: '#/components/schemas/dhcpConfigurationSet'}
          type: array
        dhcpOptionsId: {description: dhcpOptionsSet_dhcpOptionsId, type: string}
        tagSet:
          description: dhcpOptionsSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
      type: object
    disableApiTermination:
      description: disableApiTermination
      properties:
        Value: {description: disableApiTermination_Value, type: boolean}
      type: object
    ebs:
      description: ebs
      properties:
        attachTime: {description: ebs_attachTime, type: string}
        deleteOnTermination: {description: ebs_deleteOnTermination, type: boolean}
        status: {description: ebs_status, type: string}
        volumeId: {description: ebs_volumeId, type: string}
      type: object
    ebsOptimized:
      description: ebsOptimized
      properties:
        Value: {description: ebsOptimized_Value, type: boolean}
      type: object
    enableDnsHostnames:
      description: enableDnsHostnames
      properties:
        Value: {description: enableDnsHostnames_Value, type: boolean}
      type: object
    enableDnsSupport:
      description: enableDnsSupport
      properties:
        Value: {description: enableDnsSupport_Value, type: boolean}
      type: object
    error:
      description: error
      properties:
        code: {description: error_code, type: string}
        message: {description: error_message, type: string}
      type: object
    eventsSet:
      description: eventsSet
      properties:
        code: {description: eventsSet_code, type: string}
        description: {description: eventsSet_description, type: string}
        notAfter: {description: eventsSet_notAfter, type: string}
        notBefore: {description: eventsSet_notBefore, type: string}
      type: object
    exportToOsu_0:
      description: exportToOsu_0
      properties:
        DiskImageFormat: {description: exportToOsu_0_DiskImageFormat, type: string}
        OsuAkSk: {$ref: '#/components/schemas/OsuAkSk'}
        OsuBucket: {description: exportToOsu_0_OsuBucket, type: string}
        OsuManifestUrl: {description: exportToOsu_0_OsuManifestUrl, type: string}
        OsuPrefix: {description: exportToOsu_0_OsuPrefix, type: string}
      type: object
    exportToOsu_1:
      description: exportToOsu_1
      properties:
        DiskImageFormat: {description: exportToOsu_1_DiskImageFormat, type: string}
        OsuBucket: {description: exportToOsu_1_OsuBucket, type: string}
        OsuKey: {description: exportToOsu_1_OsuKey, type: string}
        OsuPrefix: {description: exportToOsu_1_OsuPrefix, type: string}
        aksk: {$ref: '#/components/schemas/aksk'}
      type: object
    groupSet:
      description: groupSet
      properties:
        GroupId: {description: groupSet_GroupId, type: string}
        GroupName: {description: groupSet_GroupName, type: string}
      type: object
    groups:
      description: groups
      properties:
        GroupId: {description: groups_GroupId, type: string}
        GroupName: {description: groups_GroupName, type: string}
      type: object
    iamInstanceProfile:
      description: iamInstanceProfile
      properties:
        arn: {description: iamInstanceProfile_arn, type: string}
        id: {description: iamInstanceProfile_id, type: string}
      type: object
    imageExport:
      description: imageExport
      properties:
        imageId: {description: imageExport_imageId, type: string}
      type: object
    imageExportTask:
      description: imageExportTask
      properties:
        completion: {description: imageExportTask_completion, type: integer}
        exportToOsu: {$ref: '#/components/schemas/exportToOsu_0'}
        imageExport: {$ref: '#/components/schemas/imageExport'}
        imageExportTaskId: {description: imageExportTask_imageExportTaskId, type: string}
        imageId: {description: imageExportTask_imageId, type: string}
        state: {description: imageExportTask_state, type: string}
        statusMessage: {description: imageExportTask_statusMessage, type: string}
        tagSet:
          description: imageExportTask_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
      type: object
    imagesSet:
      description: imagesSet
      properties:
        architecture: {description: imagesSet_architecture, type: string}
        blockDeviceMapping:
          description: imagesSet_blockDeviceMapping
          items: {$ref: '#/components/schemas/blockDeviceMapping_0'}
          type: array
        description: {description: imagesSet_description, type: string}
        hypervisor: {description: imagesSet_hypervisor, type: string}
        imageId: {description: imagesSet_imageId, type: string}
        imageLocation: {description: imagesSet_imageLocation, type: string}
        imageOwnerAlias: {description: imagesSet_imageOwnerAlias, type: string}
        imageOwnerId: {description: imagesSet_imageOwnerId, type: string}
        imageState: {description: imagesSet_imageState, type: string}
        imageType: {description: imagesSet_imageType, type: string}
        isPublic: {description: imagesSet_isPublic, type: boolean}
        name: {description: imagesSet_name, type: string}
        platform: {description: imagesSet_platform, type: string}
        productCodes:
          description: imagesSet_productCodes
          items: {$ref: '#/components/schemas/productCodes'}
          type: array
        rootDeviceName: {description: imagesSet_rootDeviceName, type: string}
        rootDeviceType: {description: imagesSet_rootDeviceType, type: string}
        stateReason: {$ref: '#/components/schemas/stateReason'}
        tagSet:
          description: imagesSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
      type: object
    instanceInitiatedShutdownBehavior:
      description: instanceInitiatedShutdownBehavior
      properties:
        Value: {description: instanceInitiatedShutdownBehavior_Value, type: string}
      type: object
    instanceState:
      description: instanceState
      properties:
        code: {description: instanceState_code, type: integer}
        name: {description: instanceState_name, type: string}
      type: object
    instanceStatus:
      description: instanceStatus
      properties:
        Details:
          description: instanceStatus_Details
          items: {$ref: '#/components/schemas/Details'}
          type: array
        Status: {description: instanceStatus_Status, type: string}
      type: object
    instanceStatusSet:
      description: instanceStatusSet
      properties:
        availabilityZone: {description: instanceStatusSet_availabilityZone, type: string}
        eventsSet:
          description: instanceStatusSet_eventsSet
          items: {$ref: '#/components/schemas/eventsSet'}
          type: array
        instanceId: {description: instanceStatusSet_instanceId, type: string}
        instanceState: {$ref: '#/components/schemas/instanceState'}
        instanceStatus: {$ref: '#/components/schemas/instanceStatus'}
        systemStatus: {$ref: '#/components/schemas/systemStatus'}
      type: object
    instanceType:
      description: instanceType
      properties:
        Value: {description: instanceType_Value, type: string}
      type: object
    instanceTypeSet:
      description: instanceTypeSet
      properties:
        ebsOptimizedAvailable: {description: instanceTypeSet_ebsOptimizedAvailable,
          type: boolean}
        ephemeralsType: {description: instanceTypeSet_ephemeralsType, type: string}
        eth: {description: instanceTypeSet_eth, type: integer}
        gpu: {description: instanceTypeSet_gpu, type: integer}
        maxIpAddresses: {description: instanceTypeSet_maxIpAddresses, type: integer}
        memory: {description: instanceTypeSet_memory, type: integer}
        name: {description: instanceTypeSet_name, type: string}
        storageCount: {description: instanceTypeSet_storageCount, type: integer}
        storageSize: {description: instanceTypeSet_storageSize, type: integer}
        vcpu: {description: instanceTypeSet_vcpu, type: integer}
      type: object
    instancesSet_0:
      description: instancesSet_0
      properties:
        amiLaunchIndex: {description: instancesSet_0_amiLaunchIndex, type: integer}
        architecture: {description: instancesSet_0_architecture, type: string}
        blockDeviceMapping:
          description: instancesSet_0_blockDeviceMapping
          items: {$ref: '#/components/schemas/blockDeviceMapping_1'}
          type: array
        clientToken: {description: instancesSet_0_clientToken, type: string}
        dnsName: {description: instancesSet_0_dnsName, type: string}
        ebsOptimized: {description: instancesSet_0_ebsOptimized, type: boolean}
        groupSet:
          description: instancesSet_0_groupSet
          items: {$ref: '#/components/schemas/groupSet'}
          type: array
        hypervisor: {description: instancesSet_0_hypervisor, type: string}
        iamInstanceProfile: {$ref: '#/components/schemas/iamInstanceProfile'}
        imageId: {description: instancesSet_0_imageId, type: string}
        instanceId: {description: instancesSet_0_instanceId, type: string}
        instanceLifecycle: {description: instancesSet_0_instanceLifecycle, type: string}
        instanceState: {$ref: '#/components/schemas/instanceState'}
        instanceType: {description: instancesSet_0_instanceType, type: string}
        ipAddress: {description: instancesSet_0_ipAddress, type: string}
        keyName: {description: instancesSet_0_keyName, type: string}
        launchTime: {description: instancesSet_0_launchTime, type: string}
        monitoring: {$ref: '#/components/schemas/monitoring'}
        networkInterfaceSet:
          description: instancesSet_0_networkInterfaceSet
          items: {$ref: '#/components/schemas/networkInterfaceSet_0'}
          type: array
        placement: {$ref: '#/components/schemas/placement'}
        platform: {description: instancesSet_0_platform, type: string}
        privateDnsName: {description: instancesSet_0_privateDnsName, type: string}
        privateIpAddress: {description: instancesSet_0_privateIpAddress, type: string}
        productCodes:
          description: instancesSet_0_productCodes
          items: {$ref: '#/components/schemas/productCodes'}
          type: array
        ramdiskId: {description: instancesSet_0_ramdiskId, type: string}
        reason: {description: instancesSet_0_reason, type: string}
        rootDeviceName: {description: instancesSet_0_rootDeviceName, type: string}
        rootDeviceType: {description: instancesSet_0_rootDeviceType, type: string}
        sourceDestCheck: {description: instancesSet_0_sourceDestCheck, type: boolean}
        spotInstanceRequestId: {description: instancesSet_0_spotInstanceRequestId,
          type: string}
        sriovNetSupport: {description: instancesSet_0_sriovNetSupport, type: string}
        stateReason: {$ref: '#/components/schemas/stateReason'}
        subnetId: {description: instancesSet_0_subnetId, type: string}
        tagSet:
          description: instancesSet_0_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        virtualizationType: {description: instancesSet_0_virtualizationType, type: string}
        vpcId: {description: instancesSet_0_vpcId, type: string}
      type: object
    instancesSet_1:
      description: instancesSet_1
      properties:
        currentState: {$ref: '#/components/schemas/currentState'}
        instanceId: {description: instancesSet_1_instanceId, type: string}
        previousState: {$ref: '#/components/schemas/previousState'}
      type: object
    internetGatewaySet:
      description: internetGatewaySet
      properties:
        attachmentSet:
          description: internetGatewaySet_attachmentSet
          items: {$ref: '#/components/schemas/attachmentSet_1'}
          type: array
        internetGatewayId: {description: internetGatewaySet_internetGatewayId, type: string}
        tagSet:
          description: internetGatewaySet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
      type: object
    ipPermissions:
      description: ipPermissions
      properties:
        FromPort: {description: ipPermissions_FromPort, type: integer}
        Groups:
          description: ipPermissions_Groups
          items: {$ref: '#/components/schemas/Groups'}
          type: array
        IpProtocol: {description: ipPermissions_IpProtocol, type: string}
        IpRanges:
          description: ipPermissions_IpRanges
          items: {$ref: '#/components/schemas/IpRanges'}
          type: array
        PrefixListIds:
          description: ipPermissions_PrefixListIds
          items: {$ref: '#/components/schemas/PrefixListIds'}
          type: array
        ToPort: {description: ipPermissions_ToPort, type: integer}
      type: object
    ipPermissionsEgress:
      description: ipPermissionsEgress
      properties:
        FromPort: {description: ipPermissionsEgress_FromPort, type: integer}
        Groups:
          description: ipPermissionsEgress_Groups
          items: {$ref: '#/components/schemas/Groups'}
          type: array
        IpProtocol: {description: ipPermissionsEgress_IpProtocol, type: string}
        IpRanges:
          description: ipPermissionsEgress_IpRanges
          items: {$ref: '#/components/schemas/IpRanges'}
          type: array
        PrefixListIds:
          description: ipPermissionsEgress_PrefixListIds
          items: {$ref: '#/components/schemas/PrefixListIds'}
          type: array
        ToPort: {description: ipPermissionsEgress_ToPort, type: integer}
      type: object
    keySet:
      description: keySet
      properties:
        keyFingerprint: {description: keySet_keyFingerprint, type: string}
        keyName: {description: keySet_keyName, type: string}
      type: object
    launchPermission:
      description: launchPermission
      properties:
        Group: {description: launchPermission_Group, type: string}
        UserId: {description: launchPermission_UserId, type: string}
      type: object
    monitoring:
      description: monitoring
      properties:
        state: {description: monitoring_state, type: string}
      type: object
    natGateway:
      description: natGateway
      properties:
        createTime: {description: natGateway_createTime, type: string}
        deleteTime: {description: natGateway_deleteTime, type: string}
        natGatewayAddress:
          description: natGateway_natGatewayAddress
          items: {$ref: '#/components/schemas/natGatewayAddress'}
          type: array
        natGatewayId: {description: natGateway_natGatewayId, type: string}
        state: {description: natGateway_state, type: string}
        subnetId: {description: natGateway_subnetId, type: string}
        tagSet:
          description: natGateway_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: natGateway_vpcId, type: string}
      type: object
    natGatewayAddress:
      description: natGatewayAddress
      properties:
        allocationId: {description: natGatewayAddress_allocationId, type: string}
        networkInterfaceId: {description: natGatewayAddress_networkInterfaceId, type: string}
        privateIp: {description: natGatewayAddress_privateIp, type: string}
        publicIp: {description: natGatewayAddress_publicIp, type: string}
      type: object
    natGatewaySet:
      description: natGatewaySet
      properties:
        createTime: {description: natGatewaySet_createTime, type: string}
        deleteTime: {description: natGatewaySet_deleteTime, type: string}
        natGatewayAddress:
          description: natGatewaySet_natGatewayAddress
          items: {$ref: '#/components/schemas/natGatewayAddress'}
          type: array
        natGatewayId: {description: natGatewaySet_natGatewayId, type: string}
        state: {description: natGatewaySet_state, type: string}
        subnetId: {description: natGatewaySet_subnetId, type: string}
        tagSet:
          description: natGatewaySet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: natGatewaySet_vpcId, type: string}
      type: object
    networkInterface:
      description: networkInterface
      properties:
        association: {$ref: '#/components/schemas/association_0'}
        attachment: {$ref: '#/components/schemas/attachment_1'}
        availabilityZone: {description: networkInterface_availabilityZone, type: string}
        description: {description: networkInterface_description, type: string}
        groups: {$ref: '#/components/schemas/groups'}
        macAddress: {description: networkInterface_macAddress, type: string}
        networkInterfaceId: {description: networkInterface_networkInterfaceId, type: string}
        ownerId: {description: networkInterface_ownerId, type: string}
        privateDnsName: {description: networkInterface_privateDnsName, type: string}
        privateIpAddress: {description: networkInterface_privateIpAddress, type: string}
        privateIpAddressesSet:
          description: networkInterface_privateIpAddressesSet
          items: {$ref: '#/components/schemas/privateIpAddressesSet_0'}
          type: array
        sourceDestCheck: {description: networkInterface_sourceDestCheck, type: boolean}
        status: {description: networkInterface_status, type: string}
        subnetId: {description: networkInterface_subnetId, type: string}
        tagSet:
          description: networkInterface_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: networkInterface_vpcId, type: string}
      type: object
    networkInterfaceSet_0:
      description: networkInterfaceSet_0
      properties:
        association: {$ref: '#/components/schemas/association_1'}
        attachment: {$ref: '#/components/schemas/attachment_2'}
        description: {description: networkInterfaceSet_0_description, type: string}
        groupSet:
          description: networkInterfaceSet_0_groupSet
          items: {$ref: '#/components/schemas/groupSet'}
          type: array
        macAddress: {description: networkInterfaceSet_0_macAddress, type: string}
        networkInterfaceId: {description: networkInterfaceSet_0_networkInterfaceId,
          type: string}
        ownerId: {description: networkInterfaceSet_0_ownerId, type: string}
        privateDnsName: {description: networkInterfaceSet_0_privateDnsName, type: string}
        privateIpAddress: {description: networkInterfaceSet_0_privateIpAddress, type: string}
        privateIpAddressesSet:
          description: networkInterfaceSet_0_privateIpAddressesSet
          items: {$ref: '#/components/schemas/privateIpAddressesSet_1'}
          type: array
        sourceDestCheck: {description: networkInterfaceSet_0_sourceDestCheck, type: boolean}
        status: {description: networkInterfaceSet_0_status, type: string}
        subnetId: {description: networkInterfaceSet_0_subnetId, type: string}
        vpcId: {description: networkInterfaceSet_0_vpcId, type: string}
      type: object
    networkInterfaceSet_1:
      description: networkInterfaceSet_1
      properties:
        association: {$ref: '#/components/schemas/association_0'}
        attachment: {$ref: '#/components/schemas/attachment_1'}
        availabilityZone: {description: networkInterfaceSet_1_availabilityZone, type: string}
        description: {description: networkInterfaceSet_1_description, type: string}
        groups: {$ref: '#/components/schemas/groups'}
        macAddress: {description: networkInterfaceSet_1_macAddress, type: string}
        networkInterfaceId: {description: networkInterfaceSet_1_networkInterfaceId,
          type: string}
        ownerId: {description: networkInterfaceSet_1_ownerId, type: string}
        privateDnsName: {description: networkInterfaceSet_1_privateDnsName, type: string}
        privateIpAddress: {description: networkInterfaceSet_1_privateIpAddress, type: string}
        privateIpAddressesSet:
          description: networkInterfaceSet_1_privateIpAddressesSet
          items: {$ref: '#/components/schemas/privateIpAddressesSet_0'}
          type: array
        sourceDestCheck: {description: networkInterfaceSet_1_sourceDestCheck, type: boolean}
        status: {description: networkInterfaceSet_1_status, type: string}
        subnetId: {description: networkInterfaceSet_1_subnetId, type: string}
        tagSet:
          description: networkInterfaceSet_1_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: networkInterfaceSet_1_vpcId, type: string}
      type: object
    options:
      description: options
      properties:
        staticRoutesOnly: {description: options_staticRoutesOnly, type: boolean}
      type: object
    placement:
      description: placement
      properties:
        AvailabilityZone: {description: placement_AvailabilityZone, type: string}
        Tenancy: {description: placement_Tenancy, type: string}
      type: object
    prefixListSet:
      description: prefixListSet
      properties:
        cidrSet:
          description: prefixListSet_cidrSet
          items: {description: prefixListSet_cidrSet, type: string}
          type: array
        prefixListId: {description: prefixListSet_prefixListId, type: string}
        prefixListName: {description: prefixListSet_prefixListName, type: string}
      type: object
    previousState:
      description: previousState
      properties:
        code: {description: previousState_code, type: integer}
        name: {description: previousState_name, type: string}
      type: object
    privateIpAddressesSet_0:
      description: privateIpAddressesSet_0
      properties:
        primary: {description: privateIpAddressesSet_0_primary, type: boolean}
        privateDnsName: {description: privateIpAddressesSet_0_privateDnsName, type: string}
        privateIpAddress: {description: privateIpAddressesSet_0_privateIpAddress,
          type: string}
      type: object
    privateIpAddressesSet_1:
      description: privateIpAddressesSet_1
      properties:
        association: {$ref: '#/components/schemas/association_1'}
        primary: {description: privateIpAddressesSet_1_primary, type: boolean}
        privateDnsName: {description: privateIpAddressesSet_1_privateDnsName, type: string}
        privateIpAddress: {description: privateIpAddressesSet_1_privateIpAddress,
          type: string}
      type: object
    productCodes:
      description: productCodes
      properties:
        productCode: {description: productCodes_productCode, type: string}
        type: {description: productCodes_type, type: string}
      type: object
    productType:
      description: productType
      properties:
        description: {description: productType_description, type: string}
        productTypeId: {description: productType_productTypeId, type: string}
        vendor: {description: productType_vendor, type: string}
      type: object
    productTypeSet:
      description: productTypeSet
      properties:
        description: {description: productTypeSet_description, type: string}
        productTypeId: {description: productTypeSet_productTypeId, type: string}
        vendor: {description: productTypeSet_vendor, type: string}
      type: object
    propagatingVgwSet:
      description: propagatingVgwSet
      properties:
        gatewayId: {description: propagatingVgwSet_gatewayId, type: string}
      type: object
    ramdisk:
      description: ramdisk
      properties:
        Value: {description: ramdisk_Value, type: string}
      type: object
    referenceQuotaSet:
      description: referenceQuotaSet
      properties:
        QuotaSet:
          description: referenceQuotaSet_QuotaSet
          items: {$ref: '#/components/schemas/QuotaSet'}
          type: array
        Reference: {description: referenceQuotaSet_Reference, type: string}
      type: object
    regionInfo:
      description: regionInfo
      properties:
        regionEndpoint: {description: regionInfo_regionEndpoint, type: string}
        regionName: {description: regionInfo_regionName, type: string}
      type: object
    requesterVpcInfo:
      description: requesterVpcInfo
      properties:
        cidrBlock: {description: requesterVpcInfo_cidrBlock, type: string}
        ownerId: {description: requesterVpcInfo_ownerId, type: string}
        vpcId: {description: requesterVpcInfo_vpcId, type: string}
      type: object
    reservationSet:
      description: reservationSet
      properties:
        groupSet:
          description: reservationSet_groupSet
          items: {$ref: '#/components/schemas/groupSet'}
          type: array
        instancesSet:
          description: reservationSet_instancesSet
          items: {$ref: '#/components/schemas/instancesSet_0'}
          type: array
        ownerId: {description: reservationSet_ownerId, type: string}
        requesterId: {description: reservationSet_requesterId, type: string}
        reservationId: {description: reservationSet_reservationId, type: string}
      type: object
    rootDeviceName:
      description: rootDeviceName
      properties:
        Value: {description: rootDeviceName_Value, type: string}
      type: object
    routeSet:
      description: routeSet
      properties:
        DestinationCidrBlock: {description: routeSet_DestinationCidrBlock, type: string}
        DestinationPrefixListId: {description: routeSet_DestinationPrefixListId, type: string}
        GatewayId: {description: routeSet_GatewayId, type: string}
        InstanceId: {description: routeSet_InstanceId, type: string}
        InstanceOwnerId: {description: routeSet_InstanceOwnerId, type: string}
        NetworkInterfaceId: {description: routeSet_NetworkInterfaceId, type: string}
        Origin: {description: routeSet_Origin, type: string}
        State: {description: routeSet_State, type: string}
        VpcPeeringConnectionId: {description: routeSet_VpcPeeringConnectionId, type: string}
      type: object
    routeTable:
      description: routeTable
      properties:
        associationSet:
          description: routeTable_associationSet
          items: {$ref: '#/components/schemas/associationSet'}
          type: array
        propagatingVgwSet:
          description: routeTable_propagatingVgwSet
          items: {$ref: '#/components/schemas/propagatingVgwSet'}
          type: array
        routeSet:
          description: routeTable_routeSet
          items: {$ref: '#/components/schemas/routeSet'}
          type: array
        routeTableId: {description: routeTable_routeTableId, type: string}
        tagSet:
          description: routeTable_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: routeTable_vpcId, type: string}
      type: object
    routeTableSet:
      description: routeTableSet
      properties:
        associationSet:
          description: routeTableSet_associationSet
          items: {$ref: '#/components/schemas/associationSet'}
          type: array
        propagatingVgwSet:
          description: routeTableSet_propagatingVgwSet
          items: {$ref: '#/components/schemas/propagatingVgwSet'}
          type: array
        routeSet:
          description: routeTableSet_routeSet
          items: {$ref: '#/components/schemas/routeSet'}
          type: array
        routeTableId: {description: routeTableSet_routeTableId, type: string}
        tagSet:
          description: routeTableSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: routeTableSet_vpcId, type: string}
      type: object
    routes:
      description: routes
      properties:
        destinationCidrBlock: {description: routes_destinationCidrBlock, type: string}
        source: {description: routes_source, type: string}
        state: {description: routes_state, type: string}
      type: object
    securityGroupInfo:
      description: securityGroupInfo
      properties:
        groupDescription: {description: securityGroupInfo_groupDescription, type: string}
        groupId: {description: securityGroupInfo_groupId, type: string}
        groupName: {description: securityGroupInfo_groupName, type: string}
        ipPermissions:
          description: securityGroupInfo_ipPermissions
          items: {$ref: '#/components/schemas/ipPermissions'}
          type: array
        ipPermissionsEgress:
          description: securityGroupInfo_ipPermissionsEgress
          items: {$ref: '#/components/schemas/ipPermissionsEgress'}
          type: array
        ownerId: {description: securityGroupInfo_ownerId, type: string}
        tagSet:
          description: securityGroupInfo_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: securityGroupInfo_vpcId, type: string}
      type: object
    snapshotExport:
      description: snapshotExport
      properties:
        snapshotId: {description: snapshotExport_snapshotId, type: string}
      type: object
    snapshotExportTask:
      description: snapshotExportTask
      properties:
        completion: {description: snapshotExportTask_completion, type: integer}
        exportToOsu: {$ref: '#/components/schemas/exportToOsu_1'}
        snapshotExport: {$ref: '#/components/schemas/snapshotExport'}
        snapshotExportTaskId: {description: snapshotExportTask_snapshotExportTaskId,
          type: string}
        snapshotId: {description: snapshotExportTask_snapshotId, type: string}
        state: {description: snapshotExportTask_state, type: string}
        statusMessage: {description: snapshotExportTask_statusMessage, type: string}
        tagSet:
          description: snapshotExportTask_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
      type: object
    snapshotSet:
      description: snapshotSet
      properties:
        description: {description: snapshotSet_description, type: string}
        ownerAlias: {description: snapshotSet_ownerAlias, type: string}
        ownerId: {description: snapshotSet_ownerId, type: string}
        progress: {description: snapshotSet_progress, type: string}
        snapshotId: {description: snapshotSet_snapshotId, type: string}
        startTime: {description: snapshotSet_startTime, type: string}
        status: {description: snapshotSet_status, type: string}
        statusMessage: {description: snapshotSet_statusMessage, type: string}
        tagSet:
          description: snapshotSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        volumeId: {description: snapshotSet_volumeId, type: string}
        volumeSize: {description: snapshotSet_volumeSize, type: integer}
      type: object
    sourceDestCheck:
      description: sourceDestCheck
      properties:
        Value: {description: sourceDestCheck_Value, type: boolean}
      type: object
    stateReason:
      description: stateReason
      properties:
        code: {description: stateReason_code, type: string}
        message: {description: stateReason_message, type: string}
      type: object
    status:
      description: status
      properties:
        code: {description: status_code, type: string}
        message: {description: status_message, type: string}
      type: object
    subnet:
      description: subnet
      properties:
        availabilityZone: {description: subnet_availabilityZone, type: string}
        availableIpAddressCount: {description: subnet_availableIpAddressCount, type: integer}
        cidrBlock: {description: subnet_cidrBlock, type: string}
        mapPublicIpOnLaunch: {description: subnet_mapPublicIpOnLaunch, type: boolean}
        state: {description: subnet_state, type: string}
        subnetId: {description: subnet_subnetId, type: string}
        tagSet:
          description: subnet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: subnet_vpcId, type: string}
      type: object
    subnetSet:
      description: subnetSet
      properties:
        availabilityZone: {description: subnetSet_availabilityZone, type: string}
        availableIpAddressCount: {description: subnetSet_availableIpAddressCount,
          type: integer}
        cidrBlock: {description: subnetSet_cidrBlock, type: string}
        mapPublicIpOnLaunch: {description: subnetSet_mapPublicIpOnLaunch, type: boolean}
        state: {description: subnetSet_state, type: string}
        subnetId: {description: subnetSet_subnetId, type: string}
        tagSet:
          description: subnetSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: subnetSet_vpcId, type: string}
      type: object
    systemStatus:
      description: systemStatus
      properties:
        Details:
          description: systemStatus_Details
          items: {$ref: '#/components/schemas/Details'}
          type: array
        Status: {description: systemStatus_Status, type: string}
      type: object
    tagSet_0:
      description: tagSet_0
      properties:
        Key: {description: tagSet_0_Key, type: string}
        Value: {description: tagSet_0_Value, type: string}
      type: object
    tagSet_1:
      description: tagSet_1
      properties:
        key: {description: tagSet_1_key, type: string}
        resourceId: {description: tagSet_1_resourceId, type: string}
        resourceType: {description: tagSet_1_resourceType, type: string}
        value: {description: tagSet_1_value, type: string}
      type: object
    unsuccessful:
      description: unsuccessful
      properties:
        error: {$ref: '#/components/schemas/error'}
        resourceId: {description: unsuccessful_resourceId, type: string}
      type: object
    userData:
      description: userData
      properties:
        Value: {description: userData_Value, type: string}
      type: object
    valueSet:
      description: valueSet
      properties:
        Value: {description: valueSet_Value, type: string}
      type: object
    vgwTelemetry:
      description: vgwTelemetry
      properties:
        acceptedRouteCount: {description: vgwTelemetry_acceptedRouteCount, type: integer}
        lastStatusChange: {description: vgwTelemetry_lastStatusChange, type: string}
        outsideIpAddress: {description: vgwTelemetry_outsideIpAddress, type: string}
        status: {description: vgwTelemetry_status, type: string}
        statusMessage: {description: vgwTelemetry_statusMessage, type: string}
      type: object
    volumeSet:
      description: volumeSet
      properties:
        attachmentSet:
          description: volumeSet_attachmentSet
          items: {$ref: '#/components/schemas/attachmentSet_0'}
          type: array
        availabilityZone: {description: volumeSet_availabilityZone, type: string}
        createTime: {description: volumeSet_createTime, type: string}
        iops: {description: volumeSet_iops, type: integer}
        size: {description: volumeSet_size, type: integer}
        snapshotId: {description: volumeSet_snapshotId, type: string}
        status: {description: volumeSet_status, type: string}
        tagSet:
          description: volumeSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        volumeId: {description: volumeSet_volumeId, type: string}
        volumeType: {description: volumeSet_volumeType, type: string}
      type: object
    vpc:
      description: vpc
      properties:
        cidrBlock: {description: vpc_cidrBlock, type: string}
        dhcpOptionsId: {description: vpc_dhcpOptionsId, type: string}
        instanceTenancy: {description: vpc_instanceTenancy, type: string}
        state: {description: vpc_state, type: string}
        tagSet:
          description: vpc_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: vpc_vpcId, type: string}
      type: object
    vpcEndpoint:
      description: vpcEndpoint
      properties:
        creationTimestamp: {description: vpcEndpoint_creationTimestamp, type: string}
        routeTableIdSet:
          description: vpcEndpoint_routeTableIdSet
          items: {description: vpcEndpoint_routeTableIdSet, type: string}
          type: array
        serviceName: {description: vpcEndpoint_serviceName, type: string}
        state: {description: vpcEndpoint_state, type: string}
        vpcEndpointId: {description: vpcEndpoint_vpcEndpointId, type: string}
        vpcId: {description: vpcEndpoint_vpcId, type: string}
      type: object
    vpcEndpointSet:
      description: vpcEndpointSet
      properties:
        creationTimestamp: {description: vpcEndpointSet_creationTimestamp, type: string}
        routeTableIdSet:
          description: vpcEndpointSet_routeTableIdSet
          items: {description: vpcEndpointSet_routeTableIdSet, type: string}
          type: array
        serviceName: {description: vpcEndpointSet_serviceName, type: string}
        state: {description: vpcEndpointSet_state, type: string}
        vpcEndpointId: {description: vpcEndpointSet_vpcEndpointId, type: string}
        vpcId: {description: vpcEndpointSet_vpcId, type: string}
      type: object
    vpcPeeringConnection:
      description: vpcPeeringConnection
      properties:
        accepterVpcInfo: {$ref: '#/components/schemas/accepterVpcInfo'}
        expirationTime: {description: vpcPeeringConnection_expirationTime, type: string}
        requesterVpcInfo: {$ref: '#/components/schemas/requesterVpcInfo'}
        status: {$ref: '#/components/schemas/status'}
        tagSet:
          description: vpcPeeringConnection_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcPeeringConnectionId: {description: vpcPeeringConnection_vpcPeeringConnectionId,
          type: string}
      type: object
    vpcPeeringConnectionSet:
      description: vpcPeeringConnectionSet
      properties:
        accepterVpcInfo: {$ref: '#/components/schemas/accepterVpcInfo'}
        expirationTime: {description: vpcPeeringConnectionSet_expirationTime, type: string}
        requesterVpcInfo: {$ref: '#/components/schemas/requesterVpcInfo'}
        status: {$ref: '#/components/schemas/status'}
        tagSet:
          description: vpcPeeringConnectionSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcPeeringConnectionId: {description: vpcPeeringConnectionSet_vpcPeeringConnectionId,
          type: string}
      type: object
    vpcSet:
      description: vpcSet
      properties:
        cidrBlock: {description: vpcSet_cidrBlock, type: string}
        dhcpOptionsId: {description: vpcSet_dhcpOptionsId, type: string}
        instanceTenancy: {description: vpcSet_instanceTenancy, type: string}
        state: {description: vpcSet_state, type: string}
        tagSet:
          description: vpcSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        vpcId: {description: vpcSet_vpcId, type: string}
      type: object
    vpnConnection:
      description: vpnConnection
      properties:
        customerGatewayConfiguration: {description: vpnConnection_customerGatewayConfiguration,
          type: string}
        customerGatewayId: {description: vpnConnection_customerGatewayId, type: string}
        options: {$ref: '#/components/schemas/options'}
        routes:
          description: vpnConnection_routes
          items: {$ref: '#/components/schemas/routes'}
          type: array
        state: {description: vpnConnection_state, type: string}
        tagSet:
          description: vpnConnection_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        type: {description: vpnConnection_type, type: string}
        vgwTelemetry:
          description: vpnConnection_vgwTelemetry
          items: {$ref: '#/components/schemas/vgwTelemetry'}
          type: array
        vpnConnectionId: {description: vpnConnection_vpnConnectionId, type: string}
        vpnGatewayId: {description: vpnConnection_vpnGatewayId, type: string}
      type: object
    vpnConnectionSet:
      description: vpnConnectionSet
      properties:
        customerGatewayConfiguration: {description: vpnConnectionSet_customerGatewayConfiguration,
          type: string}
        customerGatewayId: {description: vpnConnectionSet_customerGatewayId, type: string}
        options: {$ref: '#/components/schemas/options'}
        routes:
          description: vpnConnectionSet_routes
          items: {$ref: '#/components/schemas/routes'}
          type: array
        state: {description: vpnConnectionSet_state, type: string}
        tagSet:
          description: vpnConnectionSet_tagSet
          items: {$ref: '#/components/schemas/tagSet_0'}
          type: array
        type: {description: vpnConnectionSet_type, type: string}
        vgwTelemetry:
          description: vpnConnectionSet_vgwTelemetry
          items: {$ref: '#/components/schemas/vgwTelemetry'}
          type: array
        vpnConnectionId: {description: vpnConnectionSet_vpnConnectionId, type: string}
        vpnGatewayId: {description: vpnConnectionSet_vpnGatewayId, type: string}
      type: object
    vpnGateway:
      description: vpnGateway
      properties:
        Attachments:
          description: vpnGateway_Attachments
          items: {$ref: '#/components/schemas/Attachments'}
          type: array
        State: {description: vpnGateway_State, type: string}
        TagSet:
          description: vpnGateway_TagSet
          items: {$ref: '#/components/schemas/TagSet'}
          type: array
        Type: {description: vpnGateway_Type, type: string}
        VpnGatewayId: {description: vpnGateway_VpnGatewayId, type: string}
      type: object
    vpnGatewaySet:
      description: vpnGatewaySet
      properties:
        Attachments:
          description: vpnGatewaySet_Attachments
          items: {$ref: '#/components/schemas/Attachments'}
          type: array
        State: {description: vpnGatewaySet_State, type: string}
        TagSet:
          description: vpnGatewaySet_TagSet
          items: {$ref: '#/components/schemas/TagSet'}
          type: array
        Type: {description: vpnGatewaySet_Type, type: string}
        VpnGatewayId: {description: vpnGatewaySet_VpnGatewayId, type: string}
      type: object
  securitySchemes:
    ApiKeyAuth: {description: SecuritySchemes_ApiKeyAuth, in: header, name: Authorization,
      type: apiKey}
info:
  contact: {email: support@outscale.com}
  description: Info_Description
  license: {name: BSD 3 Clause, url: 'https://opensource.org/licenses/BSD-3-Clause'}
  termsOfService: https://en.outscale.com/terms-of-service/
  title: FCU API
  version: '2016-09-15'
openapi: 3.0.0
paths:
  /AcceptVpcPeeringConnection:
    description: _AcceptVpcPeeringConnection
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AcceptVpcPeeringConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AcceptVpcPeeringConnectionResponse'}
          description: Responses_200
      tags: [Peering Connections]
  /AllocateAddress:
    description: _AllocateAddress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AllocateAddressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AllocateAddressResponse'}
          description: Responses_200
      tags: [Addresses]
  /AssignPrivateIpAddresses:
    description: _AssignPrivateIpAddresses
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AssignPrivateIpAddressesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AssignPrivateIpAddressesResponse'}
          description: Responses_200
      tags: [Network Interfaces]
  /AssociateAddress:
    description: _AssociateAddress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AssociateAddressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AssociateAddressResponse'}
          description: Responses_200
      tags: [Addresses]
  /AssociateDhcpOptions:
    description: _AssociateDhcpOptions
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AssociateDhcpOptionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AssociateDhcpOptionsResponse'}
          description: Responses_200
      tags: [DHCP Options]
  /AssociateRouteTable:
    description: _AssociateRouteTable
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AssociateRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AssociateRouteTableResponse'}
          description: Responses_200
      tags: [Route Tables]
  /AttachInternetGateway:
    description: _AttachInternetGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AttachInternetGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AttachInternetGatewayResponse'}
          description: Responses_200
      tags: [Internet Gateways]
  /AttachNetworkInterface:
    description: _AttachNetworkInterface
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AttachNetworkInterfaceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AttachNetworkInterfaceResponse'}
          description: Responses_200
      tags: [Network Interfaces]
  /AttachVolume:
    description: _AttachVolume
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AttachVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AttachVolumeResponse'}
          description: Responses_200
      tags: [Volumes]
  /AttachVpnGateway:
    description: _AttachVpnGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AttachVpnGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AttachVpnGatewayResponse'}
          description: Responses_200
      tags: [Virtual Private Gateways]
  /AuthorizeSecurityGroupEgress:
    description: _AuthorizeSecurityGroupEgress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AuthorizeSecurityGroupEgressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AuthorizeSecurityGroupEgressResponse'}
          description: Responses_200
      tags: [Security Groups]
  /AuthorizeSecurityGroupIngress:
    description: _AuthorizeSecurityGroupIngress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AuthorizeSecurityGroupIngressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AuthorizeSecurityGroupIngressResponse'}
          description: Responses_200
      tags: [Security Groups]
  /CancelExportTask:
    description: _CancelExportTask
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CancelExportTaskRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CancelExportTaskResponse'}
          description: Responses_200
      tags: [Tasks]
  /CopyImage:
    description: _CopyImage
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CopyImageRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CopyImageResponse'}
          description: Responses_200
      tags: [Images]
  /CopySnapshot:
    description: _CopySnapshot
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CopySnapshotRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CopySnapshotResponse'}
          description: Responses_200
      tags: [Snapshots]
  /CreateCustomerGateway:
    description: _CreateCustomerGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateCustomerGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateCustomerGatewayResponse'}
          description: Responses_200
      tags: [Customer Gateways]
  /CreateDhcpOptions:
    description: _CreateDhcpOptions
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateDhcpOptionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateDhcpOptionsResponse'}
          description: Responses_200
      tags: [DHCP Options]
  /CreateImage:
    description: _CreateImage
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateImageRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateImageResponse'}
          description: Responses_200
      tags: [Images]
  /CreateImageExportTask:
    description: _CreateImageExportTask
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateImageExportTaskRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateImageExportTaskResponse'}
          description: Responses_200
      tags: [Images]
  /CreateKeyPair:
    description: _CreateKeyPair
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateKeyPairRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateKeyPairResponse'}
          description: Responses_200
      tags: [Keypairs]
  /CreateNatGateway:
    description: _CreateNatGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateNatGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateNatGatewayResponse'}
          description: Responses_200
      tags: [NAT Gateways]
  /CreateNetworkInterface:
    description: _CreateNetworkInterface
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateNetworkInterfaceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateNetworkInterfaceResponse'}
          description: Responses_200
      tags: [Network Interfaces]
  /CreateRoute:
    description: _CreateRoute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateRouteResponse'}
          description: Responses_200
      tags: [Route Tables]
  /CreateRouteTable:
    description: _CreateRouteTable
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateRouteTableResponse'}
          description: Responses_200
      tags: [Route Tables]
  /CreateSecurityGroup:
    description: _CreateSecurityGroup
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSecurityGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSecurityGroupResponse'}
          description: Responses_200
      tags: [Security Groups]
  /CreateSnapshot:
    description: _CreateSnapshot
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSnapshotRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSnapshotResponse'}
          description: Responses_200
      tags: [Snapshots]
  /CreateSnapshotExportTask:
    description: _CreateSnapshotExportTask
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSnapshotExportTaskRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSnapshotExportTaskResponse'}
          description: Responses_200
      tags: [Snapshots]
  /CreateSubnet:
    description: _CreateSubnet
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateSubnetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateSubnetResponse'}
          description: Responses_200
      tags: [Subnets]
  /CreateTags:
    description: _CreateTags
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateTagsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateTagsResponse'}
          description: Responses_200
      tags: [Tags]
  /CreateVolume:
    description: _CreateVolume
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVolumeResponse'}
          description: Responses_200
      tags: [Volumes]
  /CreateVpc:
    description: _CreateVpc
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpcRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpcResponse'}
          description: Responses_200
      tags: [VPC]
  /CreateVpcEndpoint:
    description: _CreateVpcEndpoint
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpcEndpointRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpcEndpointResponse'}
          description: Responses_200
      tags: [VPC Endpoints]
  /CreateVpcPeeringConnection:
    description: _CreateVpcPeeringConnection
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpcPeeringConnectionResponse'}
          description: Responses_200
      tags: [Peering Connections]
  /CreateVpnConnection:
    description: _CreateVpnConnection
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpnConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpnConnectionResponse'}
          description: Responses_200
      tags: [VPN Connections]
  /CreateVpnConnectionRoute:
    description: _CreateVpnConnectionRoute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpnConnectionRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpnConnectionRouteResponse'}
          description: Responses_200
      tags: [VPN Connections]
  /CreateVpnGateway:
    description: _CreateVpnGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreateVpnGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CreateVpnGatewayResponse'}
          description: Responses_200
      tags: [Virtual Private Gateways]
  /DeleteCustomerGateway:
    description: _DeleteCustomerGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteCustomerGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteCustomerGatewayResponse'}
          description: Responses_200
      tags: [Customer Gateways]
  /DeleteDhcpOptions:
    description: _DeleteDhcpOptions
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteDhcpOptionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteDhcpOptionsResponse'}
          description: Responses_200
      tags: [DHCP Options]
  /DeleteInternetGateway:
    description: _DeleteInternetGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteInternetGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteInternetGatewayResponse'}
          description: Responses_200
      tags: [Internet Gateways]
  /DeleteKeyPair:
    description: _DeleteKeyPair
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteKeyPairRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteKeyPairResponse'}
          description: Responses_200
      tags: [Keypairs]
  /DeleteNatGateway:
    description: _DeleteNatGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteNatGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteNatGatewayResponse'}
          description: Responses_200
      tags: [NAT Gateways]
  /DeleteNetworkInterface:
    description: _DeleteNetworkInterface
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteNetworkInterfaceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteNetworkInterfaceResponse'}
          description: Responses_200
      tags: [Network Interfaces]
  /DeleteRoute:
    description: _DeleteRoute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteRouteResponse'}
          description: Responses_200
      tags: [Route Tables]
  /DeleteRouteTable:
    description: _DeleteRouteTable
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteRouteTableResponse'}
          description: Responses_200
      tags: [Route Tables]
  /DeleteSecurityGroup:
    description: _DeleteSecurityGroup
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteSecurityGroupRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteSecurityGroupResponse'}
          description: Responses_200
      tags: [Security Groups]
  /DeleteSnapshot:
    description: _DeleteSnapshot
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteSnapshotRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteSnapshotResponse'}
          description: Responses_200
      tags: [Snapshots]
  /DeleteSubnet:
    description: _DeleteSubnet
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteSubnetRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteSubnetResponse'}
          description: Responses_200
      tags: [Subnets]
  /DeleteTags:
    description: _DeleteTags
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteTagsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteTagsResponse'}
          description: Responses_200
      tags: [Tags]
  /DeleteVolume:
    description: _DeleteVolume
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVolumeResponse'}
          description: Responses_200
      tags: [Volumes]
  /DeleteVpc:
    description: _DeleteVpc
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpcRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpcResponse'}
          description: Responses_200
      tags: [VPC]
  /DeleteVpcEndpoints:
    description: _DeleteVpcEndpoints
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpcEndpointsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpcEndpointsResponse'}
          description: Responses_200
      tags: [VPC Endpoints]
  /DeleteVpcPeeringConnection:
    description: _DeleteVpcPeeringConnection
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpcPeeringConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpcPeeringConnectionResponse'}
          description: Responses_200
      tags: [Peering Connections]
  /DeleteVpnConnection:
    description: _DeleteVpnConnection
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpnConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpnConnectionResponse'}
          description: Responses_200
      tags: [VPN Connections]
  /DeleteVpnConnectionRoute:
    description: _DeleteVpnConnectionRoute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpnConnectionRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpnConnectionRouteResponse'}
          description: Responses_200
      tags: [VPN Connections]
  /DeleteVpnGateway:
    description: _DeleteVpnGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeleteVpnGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeleteVpnGatewayResponse'}
          description: Responses_200
      tags: [Virtual Private Gateways]
  /DeregisterImage:
    description: _DeregisterImage
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DeregisterImageRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DeregisterImageResponse'}
          description: Responses_200
      tags: [Images]
  /DescribeAddresses:
    description: _DescribeAddresses
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeAddressesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeAddressesResponse'}
          description: Responses_200
      tags: [Addresses]
  /DescribeAvailabilityZones:
    description: _DescribeAvailabilityZones
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeAvailabilityZonesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeAvailabilityZonesResponse'}
          description: Responses_200
      tags: [Regions]
  /DescribeCustomerGateways:
    description: _DescribeCustomerGateways
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeCustomerGatewaysRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeCustomerGatewaysResponse'}
          description: Responses_200
      tags: [Customer Gateways]
  /DescribeDhcpOptions:
    description: _DescribeDhcpOptions
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeDhcpOptionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeDhcpOptionsResponse'}
          description: Responses_200
      tags: [DHCP Options]
  /DescribeImageAttribute:
    description: _DescribeImageAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeImageAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeImageAttributeResponse'}
          description: Responses_200
      tags: [Images]
  /DescribeImageExportTasks:
    description: _DescribeImageExportTasks
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeImageExportTasksRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeImageExportTasksResponse'}
          description: Responses_200
      tags: [Images]
  /DescribeImages:
    description: _DescribeImages
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeImagesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeImagesResponse'}
          description: Responses_200
      tags: [Images]
  /DescribeInstanceAttribute:
    description: _DescribeInstanceAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeInstanceAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeInstanceAttributeResponse'}
          description: Responses_200
      tags: [Instances]
  /DescribeInstanceStatus:
    description: _DescribeInstanceStatus
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeInstanceStatusRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeInstanceStatusResponse'}
          description: Responses_200
      tags: [Instances]
  /DescribeInstanceTypes:
    description: _DescribeInstanceTypes
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeInstanceTypesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeInstanceTypesResponse'}
          description: Responses_200
      tags: [Product Types]
  /DescribeInstances:
    description: _DescribeInstances
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeInstancesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeInstancesResponse'}
          description: Responses_200
      tags: [Instances]
  /DescribeInternetGateways:
    description: _DescribeInternetGateways
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeInternetGatewaysRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeInternetGatewaysResponse'}
          description: Responses_200
      tags: [Internet Gateways]
  /DescribeKeyPairs:
    description: _DescribeKeyPairs
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeKeyPairsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeKeyPairsResponse'}
          description: Responses_200
      tags: [Keypairs]
  /DescribeNatGateways:
    description: _DescribeNatGateways
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeNatGatewaysRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeNatGatewaysResponse'}
          description: Responses_200
      tags: [NAT Gateways]
  /DescribeNetworkInterfaces:
    description: _DescribeNetworkInterfaces
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeNetworkInterfacesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeNetworkInterfacesResponse'}
          description: Responses_200
      tags: [Network Interfaces]
  /DescribePrefixLists:
    description: _DescribePrefixLists
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribePrefixListsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribePrefixListsResponse'}
          description: Responses_200
      tags: [Prefix Lists]
  /DescribeProductTypes:
    description: _DescribeProductTypes
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeProductTypesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeProductTypesResponse'}
          description: Responses_200
      tags: [Product Types]
  /DescribeQuotas:
    description: _DescribeQuotas
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeQuotasRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeQuotasResponse'}
          description: Responses_200
      tags: [Quotas]
  /DescribeRegions:
    description: _DescribeRegions
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeRegionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeRegionsResponse'}
          description: Responses_200
      tags: [Regions]
  /DescribeRouteTables:
    description: _DescribeRouteTables
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeRouteTablesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeRouteTablesResponse'}
          description: Responses_200
      tags: [Route Tables]
  /DescribeSecurityGroups:
    description: _DescribeSecurityGroups
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeSecurityGroupsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeSecurityGroupsResponse'}
          description: Responses_200
      tags: [Security Groups]
  /DescribeSnapshotAttribute:
    description: _DescribeSnapshotAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeSnapshotAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeSnapshotAttributeResponse'}
          description: Responses_200
      tags: [Snapshots]
  /DescribeSnapshotExportTasks:
    description: _DescribeSnapshotExportTasks
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeSnapshotExportTasksRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeSnapshotExportTasksResponse'}
          description: Responses_200
      tags: [Snapshots]
  /DescribeSnapshots:
    description: _DescribeSnapshots
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeSnapshotsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeSnapshotsResponse'}
          description: Responses_200
      tags: [Snapshots]
  /DescribeSubnets:
    description: _DescribeSubnets
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeSubnetsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeSubnetsResponse'}
          description: Responses_200
      tags: [Subnets]
  /DescribeTags:
    description: _DescribeTags
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeTagsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeTagsResponse'}
          description: Responses_200
      tags: [Tags]
  /DescribeVolumes:
    description: _DescribeVolumes
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVolumesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVolumesResponse'}
          description: Responses_200
      tags: [Volumes]
  /DescribeVpcAttribute:
    description: _DescribeVpcAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVpcAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVpcAttributeResponse'}
          description: Responses_200
      tags: [VPC]
  /DescribeVpcEndpointServices:
    description: _DescribeVpcEndpointServices
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVpcEndpointServicesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVpcEndpointServicesResponse'}
          description: Responses_200
      tags: [VPC Endpoints]
  /DescribeVpcEndpoints:
    description: _DescribeVpcEndpoints
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVpcEndpointsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVpcEndpointsResponse'}
          description: Responses_200
      tags: [VPC Endpoints]
  /DescribeVpcPeeringConnections:
    description: _DescribeVpcPeeringConnections
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVpcPeeringConnectionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVpcPeeringConnectionsResponse'}
          description: Responses_200
      tags: [Peering Connections]
  /DescribeVpcs:
    description: _DescribeVpcs
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVpcsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVpcsResponse'}
          description: Responses_200
      tags: [VPC]
  /DescribeVpnConnections:
    description: _DescribeVpnConnections
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVpnConnectionsRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVpnConnectionsResponse'}
          description: Responses_200
      tags: [VPN Connections]
  /DescribeVpnGateways:
    description: _DescribeVpnGateways
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DescribeVpnGatewaysRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DescribeVpnGatewaysResponse'}
          description: Responses_200
      tags: [Virtual Private Gateways]
  /DetachInternetGateway:
    description: _DetachInternetGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DetachInternetGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DetachInternetGatewayResponse'}
          description: Responses_200
      tags: [Internet Gateways]
  /DetachNetworkInterface:
    description: _DetachNetworkInterface
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DetachNetworkInterfaceRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DetachNetworkInterfaceResponse'}
          description: Responses_200
      tags: [Network Interfaces]
  /DetachVolume:
    description: _DetachVolume
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DetachVolumeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DetachVolumeResponse'}
          description: Responses_200
      tags: [Volumes]
  /DetachVpnGateway:
    description: _DetachVpnGateway
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DetachVpnGatewayRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DetachVpnGatewayResponse'}
          description: Responses_200
      tags: [Virtual Private Gateways]
  /DisableVgwRoutePropagation:
    description: _DisableVgwRoutePropagation
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DisableVgwRoutePropagationRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DisableVgwRoutePropagationResponse'}
          description: Responses_200
      tags: [Virtual Private Gateways]
  /DisassociateAddress:
    description: _DisassociateAddress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DisassociateAddressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DisassociateAddressResponse'}
          description: Responses_200
      tags: [Addresses]
  /DisassociateRouteTable:
    description: _DisassociateRouteTable
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/DisassociateRouteTableRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/DisassociateRouteTableResponse'}
          description: Responses_200
      tags: [Route Tables]
  /EnableVgwRoutePropagation:
    description: _EnableVgwRoutePropagation
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/EnableVgwRoutePropagationRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/EnableVgwRoutePropagationResponse'}
          description: Responses_200
      tags: [Virtual Private Gateways]
  /GetConsoleOutput:
    description: _GetConsoleOutput
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/GetConsoleOutputRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/GetConsoleOutputResponse'}
          description: Responses_200
      tags: [Instances]
  /GetPasswordData:
    description: _GetPasswordData
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/GetPasswordDataRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/GetPasswordDataResponse'}
          description: Responses_200
      tags: [Instances]
  /GetProductType:
    description: _GetProductType
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/GetProductTypeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/GetProductTypeResponse'}
          description: Responses_200
      tags: [Product Types]
  /GetProductTypes:
    description: _GetProductTypes
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/GetProductTypesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/GetProductTypesResponse'}
          description: Responses_200
      tags: [Product Types]
  /ImportKeyPair:
    description: _ImportKeyPair
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ImportKeyPairRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ImportKeyPairResponse'}
          description: Responses_200
      tags: [Keypairs]
  /ImportSnapshot:
    description: _ImportSnapshot
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ImportSnapshotRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ImportSnapshotResponse'}
          description: Responses_200
      tags: [Snapshots]
  /ModifyImageAttribute:
    description: _ModifyImageAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifyImageAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifyImageAttributeResponse'}
          description: Responses_200
      tags: [Images]
  /ModifyInstanceAttribute:
    description: _ModifyInstanceAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifyInstanceAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifyInstanceAttributeResponse'}
          description: Responses_200
      tags: [Instances]
  /ModifyInstanceKeypair:
    description: _ModifyInstanceKeypair
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifyInstanceKeypairRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifyInstanceKeypairResponse'}
          description: Responses_200
      tags: [Instances]
  /ModifyNetworkInterfaceAttribute:
    description: _ModifyNetworkInterfaceAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifyNetworkInterfaceAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifyNetworkInterfaceAttributeResponse'}
          description: Responses_200
      tags: [Network Interfaces]
  /ModifySnapshotAttribute:
    description: _ModifySnapshotAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifySnapshotAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifySnapshotAttributeResponse'}
          description: Responses_200
      tags: [Snapshots]
  /ModifySubnetAttribute:
    description: _ModifySubnetAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifySubnetAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifySubnetAttributeResponse'}
          description: Responses_200
      tags: [Subnets]
  /ModifyVpcAttribute:
    description: _ModifyVpcAttribute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifyVpcAttributeRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifyVpcAttributeResponse'}
          description: Responses_200
      tags: [VPC]
  /ModifyVpcEndpoint:
    description: _ModifyVpcEndpoint
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ModifyVpcEndpointRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ModifyVpcEndpointResponse'}
          description: Responses_200
      tags: [VPC Endpoints]
  /ReadPublicIpRanges:
    description: _ReadPublicIpRanges
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReadPublicIpRangesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReadPublicIpRangesResponse'}
          description: Responses_200
      tags: [Regions]
  /RebootInstances:
    description: _RebootInstances
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RebootInstancesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RebootInstancesResponse'}
          description: Responses_200
      tags: [Instances]
  /RegisterImage:
    description: _RegisterImage
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RegisterImageRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RegisterImageResponse'}
          description: Responses_200
      tags: [Images]
  /RejectVpcPeeringConnection:
    description: _RejectVpcPeeringConnection
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RejectVpcPeeringConnectionRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RejectVpcPeeringConnectionResponse'}
          description: Responses_200
      tags: [Peering Connections]
  /ReleaseAddress:
    description: _ReleaseAddress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReleaseAddressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReleaseAddressResponse'}
          description: Responses_200
      tags: [Addresses]
  /ReplaceRoute:
    description: _ReplaceRoute
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReplaceRouteRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReplaceRouteResponse'}
          description: Responses_200
      tags: [Route Tables]
  /ReplaceRouteTableAssociation:
    description: _ReplaceRouteTableAssociation
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReplaceRouteTableAssociationRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReplaceRouteTableAssociationResponse'}
          description: Responses_200
      tags: [Route Tables]
  /RevokeSecurityGroupEgress:
    description: _RevokeSecurityGroupEgress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RevokeSecurityGroupEgressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RevokeSecurityGroupEgressResponse'}
          description: Responses_200
      tags: [Security Groups]
  /RevokeSecurityGroupIngress:
    description: _RevokeSecurityGroupIngress
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RevokeSecurityGroupIngressRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RevokeSecurityGroupIngressResponse'}
          description: Responses_200
      tags: [Security Groups]
  /RunInstances:
    description: _RunInstances
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RunInstancesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RunInstancesResponse'}
          description: Responses_200
      tags: [Instances]
  /StartInstances:
    description: _StartInstances
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/StartInstancesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/StartInstancesResponse'}
          description: Responses_200
      tags: [Instances]
  /StopInstances:
    description: _StopInstances
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/StopInstancesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/StopInstancesResponse'}
          description: Responses_200
      tags: [Instances]
  /TerminateInstances:
    description: _TerminateInstances
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/TerminateInstancesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/TerminateInstancesResponse'}
          description: Responses_200
      tags: [Instances]
  /UnassignPrivateIpAddresses:
    description: _UnassignPrivateIpAddresses
    get:
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/UnassignPrivateIpAddressesRequest'}
      responses:
        '200':
          content:
            application/json:
              schema: {$ref: '#/components/schemas/UnassignPrivateIpAddressesResponse'}
          description: Responses_200
      tags: [Network Interfaces]
security:
- ApiKeyAuth: []
servers:
- url: https://fcu.{region}.outscale.com
  variables:
    region:
      default: eu-west-2
      enum: [cn-southeast-1, eu-west-2, us-east-2, us-west-1]
